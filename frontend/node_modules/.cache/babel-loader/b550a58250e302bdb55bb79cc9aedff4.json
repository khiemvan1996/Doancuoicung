{"ast":null,"code":"var _jsxFileName = \"/Users/mac/Documents/Doantotnghiep/Doantotnghiep/EKwebsite/frontend/src/pages/ImageToText.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport Tesseract from 'tesseract.js';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function ImagetoTextScreen() {\n  _s();\n  const [text, setText] = useState(\"\");\n  useEffect(() => {\n    Tesseract.recognize('https://tesseract.projectnaptha.com/img/eng_bw.png', 'eng', {\n      logger: m => console.log(m)\n    }).then(_ref => {\n      let {\n        data: {\n          text\n        }\n      } = _ref;\n      setText(text);\n    });\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"This is text \"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 16,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: text\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 17,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 15,\n    columnNumber: 9\n  }, this);\n}\n_s(ImagetoTextScreen, \"+cmIci5wzo7qngZMHfXB0KTM23Y=\");\n_c = ImagetoTextScreen;\nvar _c;\n$RefreshReg$(_c, \"ImagetoTextScreen\");","map":{"version":3,"names":["React","useEffect","useState","Tesseract","ImagetoTextScreen","text","setText","recognize","logger","m","console","log","then","data"],"sources":["/Users/mac/Documents/Doantotnghiep/Doantotnghiep/EKwebsite/frontend/src/pages/ImageToText.js"],"sourcesContent":["import React, { useEffect, useState } from 'react';\nimport Tesseract from 'tesseract.js';\nexport default function ImagetoTextScreen(){\n    const [text,setText] = useState(\"\")\n    useEffect(()=>{\n        Tesseract.recognize(\n            'https://tesseract.projectnaptha.com/img/eng_bw.png',\n            'eng',\n            { logger: m => console.log(m) }\n          ).then(({ data: { text } }) => {\n            setText(text)\n        })\n    },[])\n    return(\n        <div>\n            <h1>This is text </h1>\n            <p>{text}</p>\n        </div>\n    )\n}"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAClD,OAAOC,SAAS,MAAM,cAAc;AAAC;AACrC,eAAe,SAASC,iBAAiB,GAAE;EAAA;EACvC,MAAM,CAACC,IAAI,EAACC,OAAO,CAAC,GAAGJ,QAAQ,CAAC,EAAE,CAAC;EACnCD,SAAS,CAAC,MAAI;IACVE,SAAS,CAACI,SAAS,CACf,oDAAoD,EACpD,KAAK,EACL;MAAEC,MAAM,EAAEC,CAAC,IAAIC,OAAO,CAACC,GAAG,CAACF,CAAC;IAAE,CAAC,CAChC,CAACG,IAAI,CAAC,QAAwB;MAAA,IAAvB;QAAEC,IAAI,EAAE;UAAER;QAAK;MAAE,CAAC;MACxBC,OAAO,CAACD,IAAI,CAAC;IACjB,CAAC,CAAC;EACN,CAAC,EAAC,EAAE,CAAC;EACL,oBACI;IAAA,wBACI;MAAA;IAAA;MAAA;MAAA;MAAA;IAAA,QAAsB,eACtB;MAAA,UAAIA;IAAI;MAAA;MAAA;MAAA;IAAA,QAAK;EAAA;IAAA;IAAA;IAAA;EAAA,QACX;AAEd;AAAC,GAjBuBD,iBAAiB;AAAA,KAAjBA,iBAAiB;AAAA;AAAA"},"metadata":{},"sourceType":"module"}