{"ast":null,"code":"var _jsxFileName = \"/Users/mac/Documents/Doantotnghiep/Doantotnghiep/EKwebsite/frontend/src/components/UserAccount/data.js\",\n  _s = $RefreshSig$();\nimport accountApi from 'apis/accountApi';\nimport { formatDate } from 'helper';\nimport React, { useEffect, useState } from 'react';\nimport { useDispatch } from 'react-redux';\nimport { setMessage } from 'redux/slices/message.slice';\nimport { setUserAvt } from 'redux/slices/userInfo.slice';\nimport UserAccount from '.';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction UserAccountData() {\n  _s();\n  const [userInfo, setUserInfo] = useState({\n    email: null,\n    createdDate: null\n  });\n  const dispatch = useDispatch();\n  useEffect(() => {\n    let isSub = true;\n    (async function () {\n      try {\n        const apiRes = await accountApi.getUserProfile();\n        if (apiRes.status === 200 && isSub) {\n          const {\n            email,\n            createdDate\n          } = apiRes.data;\n          setUserInfo({\n            email,\n            createdDate: formatDate(createdDate)\n          });\n        }\n      } catch (error) {}\n    })();\n    return () => isSub = false;\n  }, []);\n  const handleUploadAvt = async src => {\n    try {\n      const apiRes = await accountApi.putUpdateAvt(src);\n      if (apiRes.status === 200) {\n        dispatch(setMessage({\n          type: 'success',\n          message: 'Cập nhật ảnh đại diện thành công'\n        }));\n        dispatch(setUserAvt(apiRes.data.newSrc));\n      }\n    } catch (error) {\n      dispatch(setMessage({\n        type: 'error',\n        message: 'Cập nhật ảnh đại diện thất bại. Thử lại'\n      }));\n    }\n  };\n  const handleUpdateProfile = async (name, username) => {\n    try {\n      const apiRes = await accountApi.putUpdateProfile(name, username);\n      if (apiRes.status === 200) {\n        dispatch(setMessage({\n          type: 'success',\n          message: 'Cập nhật thông tin thành công',\n          duration: 500\n        }));\n        setTimeout(() => {\n          location.reload();\n        }, 750);\n      }\n    } catch (error) {\n      var _error$response, _error$response$data;\n      const message = ((_error$response = error.response) === null || _error$response === void 0 ? void 0 : (_error$response$data = _error$response.data) === null || _error$response$data === void 0 ? void 0 : _error$response$data.message) || 'Chỉnh sửa thông tin thất bại, thử lại !';\n      dispatch(setMessage({\n        type: 'error',\n        message\n      }));\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(UserAccount, {\n    email: userInfo.email,\n    createdDate: userInfo.createdDate,\n    onUpload: handleUploadAvt,\n    onUpdateProfile: handleUpdateProfile\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 78,\n    columnNumber: 5\n  }, this);\n}\n_s(UserAccountData, \"wUICHCFKWF10ioHJv8Hii3gl/3Q=\", false, function () {\n  return [useDispatch];\n});\n_c = UserAccountData;\nexport default UserAccountData;\nvar _c;\n$RefreshReg$(_c, \"UserAccountData\");","map":{"version":3,"names":["accountApi","formatDate","React","useEffect","useState","useDispatch","setMessage","setUserAvt","UserAccount","UserAccountData","userInfo","setUserInfo","email","createdDate","dispatch","isSub","apiRes","getUserProfile","status","data","error","handleUploadAvt","src","putUpdateAvt","type","message","newSrc","handleUpdateProfile","name","username","putUpdateProfile","duration","setTimeout","location","reload","response"],"sources":["/Users/mac/Documents/Doantotnghiep/Doantotnghiep/EKwebsite/frontend/src/components/UserAccount/data.js"],"sourcesContent":["import accountApi from 'apis/accountApi';\nimport { formatDate } from 'helper';\nimport React, { useEffect, useState } from 'react';\nimport { useDispatch } from 'react-redux';\nimport { setMessage } from 'redux/slices/message.slice';\nimport { setUserAvt } from 'redux/slices/userInfo.slice';\nimport UserAccount from '.';\n\nfunction UserAccountData() {\n  const [userInfo, setUserInfo] = useState({ email: null, createdDate: null });\n  const dispatch = useDispatch();\n\n  useEffect(() => {\n    let isSub = true;\n\n    (async function () {\n      try {\n        const apiRes = await accountApi.getUserProfile();\n\n        if (apiRes.status === 200 && isSub) {\n          const { email, createdDate } = apiRes.data;\n          setUserInfo({ email, createdDate: formatDate(createdDate) });\n        }\n      } catch (error) {}\n    })();\n\n    return () => (isSub = false);\n  }, []);\n\n  const handleUploadAvt = async (src) => {\n    try {\n      const apiRes = await accountApi.putUpdateAvt(src);\n      if (apiRes.status === 200) {\n        dispatch(\n          setMessage({\n            type: 'success',\n            message: 'Cập nhật ảnh đại diện thành công',\n          }),\n        );\n\n        dispatch(setUserAvt(apiRes.data.newSrc));\n      }\n    } catch (error) {\n      dispatch(\n        setMessage({\n          type: 'error',\n          message: 'Cập nhật ảnh đại diện thất bại. Thử lại',\n        }),\n      );\n    }\n  };\n\n  const handleUpdateProfile = async (name, username) => {\n    try {\n      const apiRes = await accountApi.putUpdateProfile(name, username);\n      if (apiRes.status === 200) {\n        dispatch(\n          setMessage({\n            type: 'success',\n            message: 'Cập nhật thông tin thành công',\n            duration: 500,\n          }),\n        );\n\n        setTimeout(() => {\n          location.reload();\n        }, 750);\n      }\n    } catch (error) {\n      const message =\n        error.response?.data?.message ||\n        'Chỉnh sửa thông tin thất bại, thử lại !';\n      dispatch(setMessage({ type: 'error', message }));\n    }\n  };\n\n  return (\n    <UserAccount\n      email={userInfo.email}\n      createdDate={userInfo.createdDate}\n      onUpload={handleUploadAvt}\n      onUpdateProfile={handleUpdateProfile}\n    />\n  );\n}\n\nexport default UserAccountData;\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}