{"ast":null,"code":"/*!\n * Compressor.js v1.1.1\n * https://fengyuanchen.github.io/compressorjs\n *\n * Copyright 2018-present Chen Fengyuan\n * Released under the MIT license\n *\n * Date: 2021-10-05T02:32:40.212Z\n */\n\n(function (global, factory) {\n  typeof exports === 'object' && typeof module !== 'undefined' ? module.exports = factory() : typeof define === 'function' && define.amd ? define(factory) : (global = typeof globalThis !== 'undefined' ? globalThis : global || self, global.Compressor = factory());\n})(this, function () {\n  'use strict';\n\n  function ownKeys(object, enumerableOnly) {\n    var keys = Object.keys(object);\n    if (Object.getOwnPropertySymbols) {\n      var symbols = Object.getOwnPropertySymbols(object);\n      if (enumerableOnly) {\n        symbols = symbols.filter(function (sym) {\n          return Object.getOwnPropertyDescriptor(object, sym).enumerable;\n        });\n      }\n      keys.push.apply(keys, symbols);\n    }\n    return keys;\n  }\n  function _objectSpread2(target) {\n    for (var i = 1; i < arguments.length; i++) {\n      var source = arguments[i] != null ? arguments[i] : {};\n      if (i % 2) {\n        ownKeys(Object(source), true).forEach(function (key) {\n          _defineProperty(target, key, source[key]);\n        });\n      } else if (Object.getOwnPropertyDescriptors) {\n        Object.defineProperties(target, Object.getOwnPropertyDescriptors(source));\n      } else {\n        ownKeys(Object(source)).forEach(function (key) {\n          Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key));\n        });\n      }\n    }\n    return target;\n  }\n  function _classCallCheck(instance, Constructor) {\n    if (!(instance instanceof Constructor)) {\n      throw new TypeError(\"Cannot call a class as a function\");\n    }\n  }\n  function _defineProperties(target, props) {\n    for (var i = 0; i < props.length; i++) {\n      var descriptor = props[i];\n      descriptor.enumerable = descriptor.enumerable || false;\n      descriptor.configurable = true;\n      if (\"value\" in descriptor) descriptor.writable = true;\n      Object.defineProperty(target, descriptor.key, descriptor);\n    }\n  }\n  function _createClass(Constructor, protoProps, staticProps) {\n    if (protoProps) _defineProperties(Constructor.prototype, protoProps);\n    if (staticProps) _defineProperties(Constructor, staticProps);\n    return Constructor;\n  }\n  function _defineProperty(obj, key, value) {\n    if (key in obj) {\n      Object.defineProperty(obj, key, {\n        value: value,\n        enumerable: true,\n        configurable: true,\n        writable: true\n      });\n    } else {\n      obj[key] = value;\n    }\n    return obj;\n  }\n  function _extends() {\n    _extends = Object.assign || function (target) {\n      for (var i = 1; i < arguments.length; i++) {\n        var source = arguments[i];\n        for (var key in source) {\n          if (Object.prototype.hasOwnProperty.call(source, key)) {\n            target[key] = source[key];\n          }\n        }\n      }\n      return target;\n    };\n    return _extends.apply(this, arguments);\n  }\n  var canvasToBlob = {\n    exports: {}\n  };\n\n  /*\n   * JavaScript Canvas to Blob\n   * https://github.com/blueimp/JavaScript-Canvas-to-Blob\n   *\n   * Copyright 2012, Sebastian Tschan\n   * https://blueimp.net\n   *\n   * Licensed under the MIT license:\n   * https://opensource.org/licenses/MIT\n   *\n   * Based on stackoverflow user Stoive's code snippet:\n   * http://stackoverflow.com/q/4998908\n   */\n\n  (function (module) {\n    if (typeof window === 'undefined') {\n      return;\n    }\n    (function (window) {\n      var CanvasPrototype = window.HTMLCanvasElement && window.HTMLCanvasElement.prototype;\n      var hasBlobConstructor = window.Blob && function () {\n        try {\n          return Boolean(new Blob());\n        } catch (e) {\n          return false;\n        }\n      }();\n      var hasArrayBufferViewSupport = hasBlobConstructor && window.Uint8Array && function () {\n        try {\n          return new Blob([new Uint8Array(100)]).size === 100;\n        } catch (e) {\n          return false;\n        }\n      }();\n      var BlobBuilder = window.BlobBuilder || window.WebKitBlobBuilder || window.MozBlobBuilder || window.MSBlobBuilder;\n      var dataURIPattern = /^data:((.*?)(;charset=.*?)?)(;base64)?,/;\n      var dataURLtoBlob = (hasBlobConstructor || BlobBuilder) && window.atob && window.ArrayBuffer && window.Uint8Array && function (dataURI) {\n        var matches, mediaType, isBase64, dataString, byteString, arrayBuffer, intArray, i, bb; // Parse the dataURI components as per RFC 2397\n\n        matches = dataURI.match(dataURIPattern);\n        if (!matches) {\n          throw new Error('invalid data URI');\n        } // Default to text/plain;charset=US-ASCII\n\n        mediaType = matches[2] ? matches[1] : 'text/plain' + (matches[3] || ';charset=US-ASCII');\n        isBase64 = !!matches[4];\n        dataString = dataURI.slice(matches[0].length);\n        if (isBase64) {\n          // Convert base64 to raw binary data held in a string:\n          byteString = atob(dataString);\n        } else {\n          // Convert base64/URLEncoded data component to raw binary:\n          byteString = decodeURIComponent(dataString);\n        } // Write the bytes of the string to an ArrayBuffer:\n\n        arrayBuffer = new ArrayBuffer(byteString.length);\n        intArray = new Uint8Array(arrayBuffer);\n        for (i = 0; i < byteString.length; i += 1) {\n          intArray[i] = byteString.charCodeAt(i);\n        } // Write the ArrayBuffer (or ArrayBufferView) to a blob:\n\n        if (hasBlobConstructor) {\n          return new Blob([hasArrayBufferViewSupport ? intArray : arrayBuffer], {\n            type: mediaType\n          });\n        }\n        bb = new BlobBuilder();\n        bb.append(arrayBuffer);\n        return bb.getBlob(mediaType);\n      };\n      if (window.HTMLCanvasElement && !CanvasPrototype.toBlob) {\n        if (CanvasPrototype.mozGetAsFile) {\n          CanvasPrototype.toBlob = function (callback, type, quality) {\n            var self = this;\n            setTimeout(function () {\n              if (quality && CanvasPrototype.toDataURL && dataURLtoBlob) {\n                callback(dataURLtoBlob(self.toDataURL(type, quality)));\n              } else {\n                callback(self.mozGetAsFile('blob', type));\n              }\n            });\n          };\n        } else if (CanvasPrototype.toDataURL && dataURLtoBlob) {\n          if (CanvasPrototype.msToBlob) {\n            CanvasPrototype.toBlob = function (callback, type, quality) {\n              var self = this;\n              setTimeout(function () {\n                if ((type && type !== 'image/png' || quality) && CanvasPrototype.toDataURL && dataURLtoBlob) {\n                  callback(dataURLtoBlob(self.toDataURL(type, quality)));\n                } else {\n                  callback(self.msToBlob(type));\n                }\n              });\n            };\n          } else {\n            CanvasPrototype.toBlob = function (callback, type, quality) {\n              var self = this;\n              setTimeout(function () {\n                callback(dataURLtoBlob(self.toDataURL(type, quality)));\n              });\n            };\n          }\n        }\n      }\n      if (module.exports) {\n        module.exports = dataURLtoBlob;\n      } else {\n        window.dataURLtoBlob = dataURLtoBlob;\n      }\n    })(window);\n  })(canvasToBlob);\n  var toBlob = canvasToBlob.exports;\n  var isBlob = function isBlob(value) {\n    if (typeof Blob === 'undefined') {\n      return false;\n    }\n    return value instanceof Blob || Object.prototype.toString.call(value) === '[object Blob]';\n  };\n  var DEFAULTS = {\n    /**\n     * Indicates if output the original image instead of the compressed one\n     * when the size of the compressed image is greater than the original one's\n     * @type {boolean}\n     */\n    strict: true,\n    /**\n     * Indicates if read the image's Exif Orientation information,\n     * and then rotate or flip the image automatically.\n     * @type {boolean}\n     */\n    checkOrientation: true,\n    /**\n     * The max width of the output image.\n     * @type {number}\n     */\n    maxWidth: Infinity,\n    /**\n     * The max height of the output image.\n     * @type {number}\n     */\n    maxHeight: Infinity,\n    /**\n     * The min width of the output image.\n     * @type {number}\n     */\n    minWidth: 0,\n    /**\n     * The min height of the output image.\n     * @type {number}\n     */\n    minHeight: 0,\n    /**\n     * The width of the output image.\n     * If not specified, the natural width of the source image will be used.\n     * @type {number}\n     */\n    width: undefined,\n    /**\n     * The height of the output image.\n     * If not specified, the natural height of the source image will be used.\n     * @type {number}\n     */\n    height: undefined,\n    /**\n     * Sets how the size of the image should be resized to the container\n     * specified by the `width` and `height` options.\n     * @type {string}\n     */\n    resize: 'none',\n    /**\n     * The quality of the output image.\n     * It must be a number between `0` and `1`,\n     * and only available for `image/jpeg` and `image/webp` images.\n     * Check out {@link https://developer.mozilla.org/en-US/docs/Web/API/HTMLCanvasElement/toBlob canvas.toBlob}.\n     * @type {number}\n     */\n    quality: 0.8,\n    /**\n     * The mime type of the output image.\n     * By default, the original mime type of the source image file will be used.\n     * @type {string}\n     */\n    mimeType: 'auto',\n    /**\n     * Files whose file type is included in this list,\n     * and whose file size exceeds the `convertSize` value will be converted to JPEGs.\n     * @type {stringï½œArray}\n     */\n    convertTypes: ['image/png'],\n    /**\n     * PNG files over this size (5 MB by default) will be converted to JPEGs.\n     * To disable this, just set the value to `Infinity`.\n     * @type {number}\n     */\n    convertSize: 5000000,\n    /**\n     * The hook function to execute before draw the image into the canvas for compression.\n     * @type {Function}\n     * @param {CanvasRenderingContext2D} context - The 2d rendering context of the canvas.\n     * @param {HTMLCanvasElement} canvas - The canvas for compression.\n     * @example\n     * function (context, canvas) {\n     *   context.fillStyle = '#fff';\n     * }\n     */\n    beforeDraw: null,\n    /**\n     * The hook function to execute after drew the image into the canvas for compression.\n     * @type {Function}\n     * @param {CanvasRenderingContext2D} context - The 2d rendering context of the canvas.\n     * @param {HTMLCanvasElement} canvas - The canvas for compression.\n     * @example\n     * function (context, canvas) {\n     *   context.filter = 'grayscale(100%)';\n     * }\n     */\n    drew: null,\n    /**\n     * The hook function to execute when success to compress the image.\n     * @type {Function}\n     * @param {File} file - The compressed image File object.\n     * @example\n     * function (file) {\n     *   console.log(file);\n     * }\n     */\n    success: null,\n    /**\n     * The hook function to execute when fail to compress the image.\n     * @type {Function}\n     * @param {Error} err - An Error object.\n     * @example\n     * function (err) {\n     *   console.log(err.message);\n     * }\n     */\n    error: null\n  };\n  var IS_BROWSER = typeof window !== 'undefined' && typeof window.document !== 'undefined';\n  var WINDOW = IS_BROWSER ? window : {};\n\n  /**\n   * Check if the given value is a positive number.\n   * @param {*} value - The value to check.\n   * @returns {boolean} Returns `true` if the given value is a positive number, else `false`.\n   */\n\n  var isPositiveNumber = function isPositiveNumber(value) {\n    return value > 0 && value < Infinity;\n  };\n  var slice = Array.prototype.slice;\n  /**\n   * Convert array-like or iterable object to an array.\n   * @param {*} value - The value to convert.\n   * @returns {Array} Returns a new array.\n   */\n\n  function toArray(value) {\n    return Array.from ? Array.from(value) : slice.call(value);\n  }\n  var REGEXP_IMAGE_TYPE = /^image\\/.+$/;\n  /**\n   * Check if the given value is a mime type of image.\n   * @param {*} value - The value to check.\n   * @returns {boolean} Returns `true` if the given is a mime type of image, else `false`.\n   */\n\n  function isImageType(value) {\n    return REGEXP_IMAGE_TYPE.test(value);\n  }\n  /**\n   * Convert image type to extension.\n   * @param {string} value - The image type to convert.\n   * @returns {boolean} Returns the image extension.\n   */\n\n  function imageTypeToExtension(value) {\n    var extension = isImageType(value) ? value.substr(6) : '';\n    if (extension === 'jpeg') {\n      extension = 'jpg';\n    }\n    return \".\".concat(extension);\n  }\n  var fromCharCode = String.fromCharCode;\n  /**\n   * Get string from char code in data view.\n   * @param {DataView} dataView - The data view for read.\n   * @param {number} start - The start index.\n   * @param {number} length - The read length.\n   * @returns {string} The read result.\n   */\n\n  function getStringFromCharCode(dataView, start, length) {\n    var str = '';\n    var i;\n    length += start;\n    for (i = start; i < length; i += 1) {\n      str += fromCharCode(dataView.getUint8(i));\n    }\n    return str;\n  }\n  var btoa = WINDOW.btoa;\n  /**\n   * Transform array buffer to Data URL.\n   * @param {ArrayBuffer} arrayBuffer - The array buffer to transform.\n   * @param {string} mimeType - The mime type of the Data URL.\n   * @returns {string} The result Data URL.\n   */\n\n  function arrayBufferToDataURL(arrayBuffer, mimeType) {\n    var chunks = [];\n    var chunkSize = 8192;\n    var uint8 = new Uint8Array(arrayBuffer);\n    while (uint8.length > 0) {\n      // XXX: Babel's `toConsumableArray` helper will throw error in IE or Safari 9\n      // eslint-disable-next-line prefer-spread\n      chunks.push(fromCharCode.apply(null, toArray(uint8.subarray(0, chunkSize))));\n      uint8 = uint8.subarray(chunkSize);\n    }\n    return \"data:\".concat(mimeType, \";base64,\").concat(btoa(chunks.join('')));\n  }\n  /**\n   * Get orientation value from given array buffer.\n   * @param {ArrayBuffer} arrayBuffer - The array buffer to read.\n   * @returns {number} The read orientation value.\n   */\n\n  function resetAndGetOrientation(arrayBuffer) {\n    var dataView = new DataView(arrayBuffer);\n    var orientation; // Ignores range error when the image does not have correct Exif information\n\n    try {\n      var littleEndian;\n      var app1Start;\n      var ifdStart; // Only handle JPEG image (start by 0xFFD8)\n\n      if (dataView.getUint8(0) === 0xFF && dataView.getUint8(1) === 0xD8) {\n        var length = dataView.byteLength;\n        var offset = 2;\n        while (offset + 1 < length) {\n          if (dataView.getUint8(offset) === 0xFF && dataView.getUint8(offset + 1) === 0xE1) {\n            app1Start = offset;\n            break;\n          }\n          offset += 1;\n        }\n      }\n      if (app1Start) {\n        var exifIDCode = app1Start + 4;\n        var tiffOffset = app1Start + 10;\n        if (getStringFromCharCode(dataView, exifIDCode, 4) === 'Exif') {\n          var endianness = dataView.getUint16(tiffOffset);\n          littleEndian = endianness === 0x4949;\n          if (littleEndian || endianness === 0x4D4D\n          /* bigEndian */) {\n            if (dataView.getUint16(tiffOffset + 2, littleEndian) === 0x002A) {\n              var firstIFDOffset = dataView.getUint32(tiffOffset + 4, littleEndian);\n              if (firstIFDOffset >= 0x00000008) {\n                ifdStart = tiffOffset + firstIFDOffset;\n              }\n            }\n          }\n        }\n      }\n      if (ifdStart) {\n        var _length = dataView.getUint16(ifdStart, littleEndian);\n        var _offset;\n        var i;\n        for (i = 0; i < _length; i += 1) {\n          _offset = ifdStart + i * 12 + 2;\n          if (dataView.getUint16(_offset, littleEndian) === 0x0112\n          /* Orientation */) {\n            // 8 is the offset of the current tag's value\n            _offset += 8; // Get the original orientation value\n\n            orientation = dataView.getUint16(_offset, littleEndian); // Override the orientation with its default value\n\n            dataView.setUint16(_offset, 1, littleEndian);\n            break;\n          }\n        }\n      }\n    } catch (e) {\n      orientation = 1;\n    }\n    return orientation;\n  }\n  /**\n   * Parse Exif Orientation value.\n   * @param {number} orientation - The orientation to parse.\n   * @returns {Object} The parsed result.\n   */\n\n  function parseOrientation(orientation) {\n    var rotate = 0;\n    var scaleX = 1;\n    var scaleY = 1;\n    switch (orientation) {\n      // Flip horizontal\n      case 2:\n        scaleX = -1;\n        break;\n      // Rotate left 180Â°\n\n      case 3:\n        rotate = -180;\n        break;\n      // Flip vertical\n\n      case 4:\n        scaleY = -1;\n        break;\n      // Flip vertical and rotate right 90Â°\n\n      case 5:\n        rotate = 90;\n        scaleY = -1;\n        break;\n      // Rotate right 90Â°\n\n      case 6:\n        rotate = 90;\n        break;\n      // Flip horizontal and rotate right 90Â°\n\n      case 7:\n        rotate = 90;\n        scaleX = -1;\n        break;\n      // Rotate left 90Â°\n\n      case 8:\n        rotate = -90;\n        break;\n    }\n    return {\n      rotate: rotate,\n      scaleX: scaleX,\n      scaleY: scaleY\n    };\n  }\n  var REGEXP_DECIMALS = /\\.\\d*(?:0|9){12}\\d*$/;\n  /**\n   * Normalize decimal number.\n   * Check out {@link https://0.30000000000000004.com/}\n   * @param {number} value - The value to normalize.\n   * @param {number} [times=100000000000] - The times for normalizing.\n   * @returns {number} Returns the normalized number.\n   */\n\n  function normalizeDecimalNumber(value) {\n    var times = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 100000000000;\n    return REGEXP_DECIMALS.test(value) ? Math.round(value * times) / times : value;\n  }\n  /**\n   * Get the max sizes in a rectangle under the given aspect ratio.\n   * @param {Object} data - The original sizes.\n   * @param {string} [type='contain'] - The adjust type.\n   * @returns {Object} The result sizes.\n   */\n\n  function getAdjustedSizes(_ref) {\n    var aspectRatio = _ref.aspectRatio,\n      height = _ref.height,\n      width = _ref.width;\n    var type = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 'none';\n    var isValidWidth = isPositiveNumber(width);\n    var isValidHeight = isPositiveNumber(height);\n    if (isValidWidth && isValidHeight) {\n      var adjustedWidth = height * aspectRatio;\n      if ((type === 'contain' || type === 'none') && adjustedWidth > width || type === 'cover' && adjustedWidth < width) {\n        height = width / aspectRatio;\n      } else {\n        width = height * aspectRatio;\n      }\n    } else if (isValidWidth) {\n      height = width / aspectRatio;\n    } else if (isValidHeight) {\n      width = height * aspectRatio;\n    }\n    return {\n      width: width,\n      height: height\n    };\n  }\n  var ArrayBuffer$1 = WINDOW.ArrayBuffer,\n    FileReader = WINDOW.FileReader;\n  var URL = WINDOW.URL || WINDOW.webkitURL;\n  var REGEXP_EXTENSION = /\\.\\w+$/;\n  var AnotherCompressor = WINDOW.Compressor;\n  /**\n   * Creates a new image compressor.\n   * @class\n   */\n\n  var Compressor = /*#__PURE__*/function () {\n    /**\n     * The constructor of Compressor.\n     * @param {File|Blob} file - The target image file for compressing.\n     * @param {Object} [options] - The options for compressing.\n     */\n    function Compressor(file, options) {\n      _classCallCheck(this, Compressor);\n      this.file = file;\n      this.image = new Image();\n      this.options = _objectSpread2(_objectSpread2({}, DEFAULTS), options);\n      this.aborted = false;\n      this.result = null;\n      this.init();\n    }\n    _createClass(Compressor, [{\n      key: \"init\",\n      value: function init() {\n        var _this = this;\n        var file = this.file,\n          options = this.options;\n        if (!isBlob(file)) {\n          this.fail(new Error('The first argument must be a File or Blob object.'));\n          return;\n        }\n        var mimeType = file.type;\n        if (!isImageType(mimeType)) {\n          this.fail(new Error('The first argument must be an image File or Blob object.'));\n          return;\n        }\n        if (!URL || !FileReader) {\n          this.fail(new Error('The current browser does not support image compression.'));\n          return;\n        }\n        if (!ArrayBuffer$1) {\n          options.checkOrientation = false;\n        }\n        if (URL && !options.checkOrientation) {\n          this.load({\n            url: URL.createObjectURL(file)\n          });\n        } else {\n          var reader = new FileReader();\n          var checkOrientation = options.checkOrientation && mimeType === 'image/jpeg';\n          this.reader = reader;\n          reader.onload = function (_ref) {\n            var target = _ref.target;\n            var result = target.result;\n            var data = {};\n            if (checkOrientation) {\n              // Reset the orientation value to its default value 1\n              // as some iOS browsers will render image with its orientation\n              var orientation = resetAndGetOrientation(result);\n              if (orientation > 1 || !URL) {\n                // Generate a new URL which has the default orientation value\n                data.url = arrayBufferToDataURL(result, mimeType);\n                if (orientation > 1) {\n                  _extends(data, parseOrientation(orientation));\n                }\n              } else {\n                data.url = URL.createObjectURL(file);\n              }\n            } else {\n              data.url = result;\n            }\n            _this.load(data);\n          };\n          reader.onabort = function () {\n            _this.fail(new Error('Aborted to read the image with FileReader.'));\n          };\n          reader.onerror = function () {\n            _this.fail(new Error('Failed to read the image with FileReader.'));\n          };\n          reader.onloadend = function () {\n            _this.reader = null;\n          };\n          if (checkOrientation) {\n            reader.readAsArrayBuffer(file);\n          } else {\n            reader.readAsDataURL(file);\n          }\n        }\n      }\n    }, {\n      key: \"load\",\n      value: function load(data) {\n        var _this2 = this;\n        var file = this.file,\n          image = this.image;\n        image.onload = function () {\n          _this2.draw(_objectSpread2(_objectSpread2({}, data), {}, {\n            naturalWidth: image.naturalWidth,\n            naturalHeight: image.naturalHeight\n          }));\n        };\n        image.onabort = function () {\n          _this2.fail(new Error('Aborted to load the image.'));\n        };\n        image.onerror = function () {\n          _this2.fail(new Error('Failed to load the image.'));\n        }; // Match all browsers that use WebKit as the layout engine in iOS devices,\n        // such as Safari for iOS, Chrome for iOS, and in-app browsers.\n\n        if (WINDOW.navigator && /(?:iPad|iPhone|iPod).*?AppleWebKit/i.test(WINDOW.navigator.userAgent)) {\n          // Fix the `The operation is insecure` error (#57)\n          image.crossOrigin = 'anonymous';\n        }\n        image.alt = file.name;\n        image.src = data.url;\n      }\n    }, {\n      key: \"draw\",\n      value: function draw(_ref2) {\n        var _this3 = this;\n        var naturalWidth = _ref2.naturalWidth,\n          naturalHeight = _ref2.naturalHeight,\n          _ref2$rotate = _ref2.rotate,\n          rotate = _ref2$rotate === void 0 ? 0 : _ref2$rotate,\n          _ref2$scaleX = _ref2.scaleX,\n          scaleX = _ref2$scaleX === void 0 ? 1 : _ref2$scaleX,\n          _ref2$scaleY = _ref2.scaleY,\n          scaleY = _ref2$scaleY === void 0 ? 1 : _ref2$scaleY;\n        var file = this.file,\n          image = this.image,\n          options = this.options;\n        var canvas = document.createElement('canvas');\n        var context = canvas.getContext('2d');\n        var is90DegreesRotated = Math.abs(rotate) % 180 === 90;\n        var resizable = (options.resize === 'contain' || options.resize === 'cover') && isPositiveNumber(options.width) && isPositiveNumber(options.height);\n        var maxWidth = Math.max(options.maxWidth, 0) || Infinity;\n        var maxHeight = Math.max(options.maxHeight, 0) || Infinity;\n        var minWidth = Math.max(options.minWidth, 0) || 0;\n        var minHeight = Math.max(options.minHeight, 0) || 0;\n        var aspectRatio = naturalWidth / naturalHeight;\n        var width = options.width,\n          height = options.height;\n        if (is90DegreesRotated) {\n          var _ref3 = [maxHeight, maxWidth];\n          maxWidth = _ref3[0];\n          maxHeight = _ref3[1];\n          var _ref4 = [minHeight, minWidth];\n          minWidth = _ref4[0];\n          minHeight = _ref4[1];\n          var _ref5 = [height, width];\n          width = _ref5[0];\n          height = _ref5[1];\n        }\n        if (resizable) {\n          aspectRatio = width / height;\n        }\n        var _getAdjustedSizes = getAdjustedSizes({\n          aspectRatio: aspectRatio,\n          width: maxWidth,\n          height: maxHeight\n        }, 'contain');\n        maxWidth = _getAdjustedSizes.width;\n        maxHeight = _getAdjustedSizes.height;\n        var _getAdjustedSizes2 = getAdjustedSizes({\n          aspectRatio: aspectRatio,\n          width: minWidth,\n          height: minHeight\n        }, 'cover');\n        minWidth = _getAdjustedSizes2.width;\n        minHeight = _getAdjustedSizes2.height;\n        if (resizable) {\n          var _getAdjustedSizes3 = getAdjustedSizes({\n            aspectRatio: aspectRatio,\n            width: width,\n            height: height\n          }, options.resize);\n          width = _getAdjustedSizes3.width;\n          height = _getAdjustedSizes3.height;\n        } else {\n          var _getAdjustedSizes4 = getAdjustedSizes({\n            aspectRatio: aspectRatio,\n            width: width,\n            height: height\n          });\n          var _getAdjustedSizes4$wi = _getAdjustedSizes4.width;\n          width = _getAdjustedSizes4$wi === void 0 ? naturalWidth : _getAdjustedSizes4$wi;\n          var _getAdjustedSizes4$he = _getAdjustedSizes4.height;\n          height = _getAdjustedSizes4$he === void 0 ? naturalHeight : _getAdjustedSizes4$he;\n        }\n        width = Math.floor(normalizeDecimalNumber(Math.min(Math.max(width, minWidth), maxWidth)));\n        height = Math.floor(normalizeDecimalNumber(Math.min(Math.max(height, minHeight), maxHeight)));\n        var destX = -width / 2;\n        var destY = -height / 2;\n        var destWidth = width;\n        var destHeight = height;\n        var params = [];\n        if (resizable) {\n          var srcX = 0;\n          var srcY = 0;\n          var srcWidth = naturalWidth;\n          var srcHeight = naturalHeight;\n          var _getAdjustedSizes5 = getAdjustedSizes({\n            aspectRatio: aspectRatio,\n            width: naturalWidth,\n            height: naturalHeight\n          }, {\n            contain: 'cover',\n            cover: 'contain'\n          }[options.resize]);\n          srcWidth = _getAdjustedSizes5.width;\n          srcHeight = _getAdjustedSizes5.height;\n          srcX = (naturalWidth - srcWidth) / 2;\n          srcY = (naturalHeight - srcHeight) / 2;\n          params.push(srcX, srcY, srcWidth, srcHeight);\n        }\n        params.push(destX, destY, destWidth, destHeight);\n        if (is90DegreesRotated) {\n          var _ref6 = [height, width];\n          width = _ref6[0];\n          height = _ref6[1];\n        }\n        canvas.width = width;\n        canvas.height = height;\n        if (!isImageType(options.mimeType)) {\n          options.mimeType = file.type;\n        }\n        var fillStyle = 'transparent'; // Converts PNG files over the `convertSize` to JPEGs.\n\n        if (file.size > options.convertSize && options.convertTypes.indexOf(options.mimeType) >= 0) {\n          options.mimeType = 'image/jpeg';\n        }\n        if (options.mimeType === 'image/jpeg') {\n          fillStyle = '#fff';\n        } // Override the default fill color (#000, black)\n\n        context.fillStyle = fillStyle;\n        context.fillRect(0, 0, width, height);\n        if (options.beforeDraw) {\n          options.beforeDraw.call(this, context, canvas);\n        }\n        if (this.aborted) {\n          return;\n        }\n        context.save();\n        context.translate(width / 2, height / 2);\n        context.rotate(rotate * Math.PI / 180);\n        context.scale(scaleX, scaleY);\n        context.drawImage.apply(context, [image].concat(params));\n        context.restore();\n        if (options.drew) {\n          options.drew.call(this, context, canvas);\n        }\n        if (this.aborted) {\n          return;\n        }\n        var done = function done(result) {\n          if (!_this3.aborted) {\n            _this3.done({\n              naturalWidth: naturalWidth,\n              naturalHeight: naturalHeight,\n              result: result\n            });\n          }\n        };\n        if (canvas.toBlob) {\n          canvas.toBlob(done, options.mimeType, options.quality);\n        } else {\n          done(toBlob(canvas.toDataURL(options.mimeType, options.quality)));\n        }\n      }\n    }, {\n      key: \"done\",\n      value: function done(_ref7) {\n        var naturalWidth = _ref7.naturalWidth,\n          naturalHeight = _ref7.naturalHeight,\n          result = _ref7.result;\n        var file = this.file,\n          image = this.image,\n          options = this.options;\n        if (URL && !options.checkOrientation) {\n          URL.revokeObjectURL(image.src);\n        }\n        if (result) {\n          // Returns original file if the result is greater than it and without size related options\n          if (options.strict && result.size > file.size && options.mimeType === file.type && !(options.width > naturalWidth || options.height > naturalHeight || options.minWidth > naturalWidth || options.minHeight > naturalHeight || options.maxWidth < naturalWidth || options.maxHeight < naturalHeight)) {\n            result = file;\n          } else {\n            var date = new Date();\n            result.lastModified = date.getTime();\n            result.lastModifiedDate = date;\n            result.name = file.name; // Convert the extension to match its type\n\n            if (result.name && result.type !== file.type) {\n              result.name = result.name.replace(REGEXP_EXTENSION, imageTypeToExtension(result.type));\n            }\n          }\n        } else {\n          // Returns original file if the result is null in some cases.\n          result = file;\n        }\n        this.result = result;\n        if (options.success) {\n          options.success.call(this, result);\n        }\n      }\n    }, {\n      key: \"fail\",\n      value: function fail(err) {\n        var options = this.options;\n        if (options.error) {\n          options.error.call(this, err);\n        } else {\n          throw err;\n        }\n      }\n    }, {\n      key: \"abort\",\n      value: function abort() {\n        if (!this.aborted) {\n          this.aborted = true;\n          if (this.reader) {\n            this.reader.abort();\n          } else if (!this.image.complete) {\n            this.image.onload = null;\n            this.image.onabort();\n          } else {\n            this.fail(new Error('The compression process has been aborted.'));\n          }\n        }\n      }\n      /**\n       * Get the no conflict compressor class.\n       * @returns {Compressor} The compressor class.\n       */\n    }], [{\n      key: \"noConflict\",\n      value: function noConflict() {\n        window.Compressor = AnotherCompressor;\n        return Compressor;\n      }\n      /**\n       * Change the default options.\n       * @param {Object} options - The new default options.\n       */\n    }, {\n      key: \"setDefaults\",\n      value: function setDefaults(options) {\n        _extends(DEFAULTS, options);\n      }\n    }]);\n    return Compressor;\n  }();\n  return Compressor;\n});","map":{"version":3,"names":["global","factory","exports","module","define","amd","globalThis","self","Compressor","ownKeys","object","enumerableOnly","keys","Object","getOwnPropertySymbols","symbols","filter","sym","getOwnPropertyDescriptor","enumerable","push","apply","_objectSpread2","target","i","arguments","length","source","forEach","key","_defineProperty","getOwnPropertyDescriptors","defineProperties","defineProperty","_classCallCheck","instance","Constructor","TypeError","_defineProperties","props","descriptor","configurable","writable","_createClass","protoProps","staticProps","prototype","obj","value","_extends","assign","hasOwnProperty","call","canvasToBlob","window","CanvasPrototype","HTMLCanvasElement","hasBlobConstructor","Blob","Boolean","e","hasArrayBufferViewSupport","Uint8Array","size","BlobBuilder","WebKitBlobBuilder","MozBlobBuilder","MSBlobBuilder","dataURIPattern","dataURLtoBlob","atob","ArrayBuffer","dataURI","matches","mediaType","isBase64","dataString","byteString","arrayBuffer","intArray","bb","match","Error","slice","decodeURIComponent","charCodeAt","type","append","getBlob","toBlob","mozGetAsFile","callback","quality","setTimeout","toDataURL","msToBlob","isBlob","toString","DEFAULTS","strict","checkOrientation","maxWidth","Infinity","maxHeight","minWidth","minHeight","width","undefined","height","resize","mimeType","convertTypes","convertSize","beforeDraw","drew","success","error","IS_BROWSER","document","WINDOW","isPositiveNumber","Array","toArray","from","REGEXP_IMAGE_TYPE","isImageType","test","imageTypeToExtension","extension","substr","concat","fromCharCode","String","getStringFromCharCode","dataView","start","str","getUint8","btoa","arrayBufferToDataURL","chunks","chunkSize","uint8","subarray","join","resetAndGetOrientation","DataView","orientation","littleEndian","app1Start","ifdStart","byteLength","offset","exifIDCode","tiffOffset","endianness","getUint16","firstIFDOffset","getUint32","_length","_offset","setUint16","parseOrientation","rotate","scaleX","scaleY","REGEXP_DECIMALS","normalizeDecimalNumber","times","Math","round","getAdjustedSizes","_ref","aspectRatio","isValidWidth","isValidHeight","adjustedWidth","ArrayBuffer$1","FileReader","URL","webkitURL","REGEXP_EXTENSION","AnotherCompressor","file","options","image","Image","aborted","result","init","_this","fail","load","url","createObjectURL","reader","onload","data","onabort","onerror","onloadend","readAsArrayBuffer","readAsDataURL","_this2","draw","naturalWidth","naturalHeight","navigator","userAgent","crossOrigin","alt","name","src","_ref2","_this3","_ref2$rotate","_ref2$scaleX","_ref2$scaleY","canvas","createElement","context","getContext","is90DegreesRotated","abs","resizable","max","_ref3","_ref4","_ref5","_getAdjustedSizes","_getAdjustedSizes2","_getAdjustedSizes3","_getAdjustedSizes4","_getAdjustedSizes4$wi","_getAdjustedSizes4$he","floor","min","destX","destY","destWidth","destHeight","params","srcX","srcY","srcWidth","srcHeight","_getAdjustedSizes5","contain","cover","_ref6","fillStyle","indexOf","fillRect","save","translate","PI","scale","drawImage","restore","done","_ref7","revokeObjectURL","date","Date","lastModified","getTime","lastModifiedDate","replace","err","abort","complete","noConflict","setDefaults"],"sources":["/Users/mac/Documents/Doantotnghiep/Doantotnghiep/dynonary-english/frontend/node_modules/compressorjs/dist/compressor.js"],"sourcesContent":["/*!\n * Compressor.js v1.1.1\n * https://fengyuanchen.github.io/compressorjs\n *\n * Copyright 2018-present Chen Fengyuan\n * Released under the MIT license\n *\n * Date: 2021-10-05T02:32:40.212Z\n */\n\n(function (global, factory) {\n  typeof exports === 'object' && typeof module !== 'undefined' ? module.exports = factory() :\n  typeof define === 'function' && define.amd ? define(factory) :\n  (global = typeof globalThis !== 'undefined' ? globalThis : global || self, global.Compressor = factory());\n})(this, (function () { 'use strict';\n\n  function ownKeys(object, enumerableOnly) {\n    var keys = Object.keys(object);\n\n    if (Object.getOwnPropertySymbols) {\n      var symbols = Object.getOwnPropertySymbols(object);\n\n      if (enumerableOnly) {\n        symbols = symbols.filter(function (sym) {\n          return Object.getOwnPropertyDescriptor(object, sym).enumerable;\n        });\n      }\n\n      keys.push.apply(keys, symbols);\n    }\n\n    return keys;\n  }\n\n  function _objectSpread2(target) {\n    for (var i = 1; i < arguments.length; i++) {\n      var source = arguments[i] != null ? arguments[i] : {};\n\n      if (i % 2) {\n        ownKeys(Object(source), true).forEach(function (key) {\n          _defineProperty(target, key, source[key]);\n        });\n      } else if (Object.getOwnPropertyDescriptors) {\n        Object.defineProperties(target, Object.getOwnPropertyDescriptors(source));\n      } else {\n        ownKeys(Object(source)).forEach(function (key) {\n          Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key));\n        });\n      }\n    }\n\n    return target;\n  }\n\n  function _classCallCheck(instance, Constructor) {\n    if (!(instance instanceof Constructor)) {\n      throw new TypeError(\"Cannot call a class as a function\");\n    }\n  }\n\n  function _defineProperties(target, props) {\n    for (var i = 0; i < props.length; i++) {\n      var descriptor = props[i];\n      descriptor.enumerable = descriptor.enumerable || false;\n      descriptor.configurable = true;\n      if (\"value\" in descriptor) descriptor.writable = true;\n      Object.defineProperty(target, descriptor.key, descriptor);\n    }\n  }\n\n  function _createClass(Constructor, protoProps, staticProps) {\n    if (protoProps) _defineProperties(Constructor.prototype, protoProps);\n    if (staticProps) _defineProperties(Constructor, staticProps);\n    return Constructor;\n  }\n\n  function _defineProperty(obj, key, value) {\n    if (key in obj) {\n      Object.defineProperty(obj, key, {\n        value: value,\n        enumerable: true,\n        configurable: true,\n        writable: true\n      });\n    } else {\n      obj[key] = value;\n    }\n\n    return obj;\n  }\n\n  function _extends() {\n    _extends = Object.assign || function (target) {\n      for (var i = 1; i < arguments.length; i++) {\n        var source = arguments[i];\n\n        for (var key in source) {\n          if (Object.prototype.hasOwnProperty.call(source, key)) {\n            target[key] = source[key];\n          }\n        }\n      }\n\n      return target;\n    };\n\n    return _extends.apply(this, arguments);\n  }\n\n  var canvasToBlob = {exports: {}};\n\n  /*\n   * JavaScript Canvas to Blob\n   * https://github.com/blueimp/JavaScript-Canvas-to-Blob\n   *\n   * Copyright 2012, Sebastian Tschan\n   * https://blueimp.net\n   *\n   * Licensed under the MIT license:\n   * https://opensource.org/licenses/MIT\n   *\n   * Based on stackoverflow user Stoive's code snippet:\n   * http://stackoverflow.com/q/4998908\n   */\n\n  (function (module) {\n  if (typeof window === 'undefined') {\n    return;\n  }\n\n    (function (window) {\n\n      var CanvasPrototype = window.HTMLCanvasElement && window.HTMLCanvasElement.prototype;\n\n      var hasBlobConstructor = window.Blob && function () {\n        try {\n          return Boolean(new Blob());\n        } catch (e) {\n          return false;\n        }\n      }();\n\n      var hasArrayBufferViewSupport = hasBlobConstructor && window.Uint8Array && function () {\n        try {\n          return new Blob([new Uint8Array(100)]).size === 100;\n        } catch (e) {\n          return false;\n        }\n      }();\n\n      var BlobBuilder = window.BlobBuilder || window.WebKitBlobBuilder || window.MozBlobBuilder || window.MSBlobBuilder;\n      var dataURIPattern = /^data:((.*?)(;charset=.*?)?)(;base64)?,/;\n\n      var dataURLtoBlob = (hasBlobConstructor || BlobBuilder) && window.atob && window.ArrayBuffer && window.Uint8Array && function (dataURI) {\n        var matches, mediaType, isBase64, dataString, byteString, arrayBuffer, intArray, i, bb; // Parse the dataURI components as per RFC 2397\n\n        matches = dataURI.match(dataURIPattern);\n\n        if (!matches) {\n          throw new Error('invalid data URI');\n        } // Default to text/plain;charset=US-ASCII\n\n\n        mediaType = matches[2] ? matches[1] : 'text/plain' + (matches[3] || ';charset=US-ASCII');\n        isBase64 = !!matches[4];\n        dataString = dataURI.slice(matches[0].length);\n\n        if (isBase64) {\n          // Convert base64 to raw binary data held in a string:\n          byteString = atob(dataString);\n        } else {\n          // Convert base64/URLEncoded data component to raw binary:\n          byteString = decodeURIComponent(dataString);\n        } // Write the bytes of the string to an ArrayBuffer:\n\n\n        arrayBuffer = new ArrayBuffer(byteString.length);\n        intArray = new Uint8Array(arrayBuffer);\n\n        for (i = 0; i < byteString.length; i += 1) {\n          intArray[i] = byteString.charCodeAt(i);\n        } // Write the ArrayBuffer (or ArrayBufferView) to a blob:\n\n\n        if (hasBlobConstructor) {\n          return new Blob([hasArrayBufferViewSupport ? intArray : arrayBuffer], {\n            type: mediaType\n          });\n        }\n\n        bb = new BlobBuilder();\n        bb.append(arrayBuffer);\n        return bb.getBlob(mediaType);\n      };\n\n      if (window.HTMLCanvasElement && !CanvasPrototype.toBlob) {\n        if (CanvasPrototype.mozGetAsFile) {\n          CanvasPrototype.toBlob = function (callback, type, quality) {\n            var self = this;\n            setTimeout(function () {\n              if (quality && CanvasPrototype.toDataURL && dataURLtoBlob) {\n                callback(dataURLtoBlob(self.toDataURL(type, quality)));\n              } else {\n                callback(self.mozGetAsFile('blob', type));\n              }\n            });\n          };\n        } else if (CanvasPrototype.toDataURL && dataURLtoBlob) {\n          if (CanvasPrototype.msToBlob) {\n            CanvasPrototype.toBlob = function (callback, type, quality) {\n              var self = this;\n              setTimeout(function () {\n                if ((type && type !== 'image/png' || quality) && CanvasPrototype.toDataURL && dataURLtoBlob) {\n                  callback(dataURLtoBlob(self.toDataURL(type, quality)));\n                } else {\n                  callback(self.msToBlob(type));\n                }\n              });\n            };\n          } else {\n            CanvasPrototype.toBlob = function (callback, type, quality) {\n              var self = this;\n              setTimeout(function () {\n                callback(dataURLtoBlob(self.toDataURL(type, quality)));\n              });\n            };\n          }\n        }\n      }\n\n      if (module.exports) {\n        module.exports = dataURLtoBlob;\n      } else {\n        window.dataURLtoBlob = dataURLtoBlob;\n      }\n    })(window);\n  })(canvasToBlob);\n\n  var toBlob = canvasToBlob.exports;\n\n  var isBlob = function isBlob(value) {\n    if (typeof Blob === 'undefined') {\n      return false;\n    }\n\n    return value instanceof Blob || Object.prototype.toString.call(value) === '[object Blob]';\n  };\n\n  var DEFAULTS = {\n    /**\n     * Indicates if output the original image instead of the compressed one\n     * when the size of the compressed image is greater than the original one's\n     * @type {boolean}\n     */\n    strict: true,\n\n    /**\n     * Indicates if read the image's Exif Orientation information,\n     * and then rotate or flip the image automatically.\n     * @type {boolean}\n     */\n    checkOrientation: true,\n\n    /**\n     * The max width of the output image.\n     * @type {number}\n     */\n    maxWidth: Infinity,\n\n    /**\n     * The max height of the output image.\n     * @type {number}\n     */\n    maxHeight: Infinity,\n\n    /**\n     * The min width of the output image.\n     * @type {number}\n     */\n    minWidth: 0,\n\n    /**\n     * The min height of the output image.\n     * @type {number}\n     */\n    minHeight: 0,\n\n    /**\n     * The width of the output image.\n     * If not specified, the natural width of the source image will be used.\n     * @type {number}\n     */\n    width: undefined,\n\n    /**\n     * The height of the output image.\n     * If not specified, the natural height of the source image will be used.\n     * @type {number}\n     */\n    height: undefined,\n\n    /**\n     * Sets how the size of the image should be resized to the container\n     * specified by the `width` and `height` options.\n     * @type {string}\n     */\n    resize: 'none',\n\n    /**\n     * The quality of the output image.\n     * It must be a number between `0` and `1`,\n     * and only available for `image/jpeg` and `image/webp` images.\n     * Check out {@link https://developer.mozilla.org/en-US/docs/Web/API/HTMLCanvasElement/toBlob canvas.toBlob}.\n     * @type {number}\n     */\n    quality: 0.8,\n\n    /**\n     * The mime type of the output image.\n     * By default, the original mime type of the source image file will be used.\n     * @type {string}\n     */\n    mimeType: 'auto',\n\n    /**\n     * Files whose file type is included in this list,\n     * and whose file size exceeds the `convertSize` value will be converted to JPEGs.\n     * @type {stringï½œArray}\n     */\n    convertTypes: ['image/png'],\n\n    /**\n     * PNG files over this size (5 MB by default) will be converted to JPEGs.\n     * To disable this, just set the value to `Infinity`.\n     * @type {number}\n     */\n    convertSize: 5000000,\n\n    /**\n     * The hook function to execute before draw the image into the canvas for compression.\n     * @type {Function}\n     * @param {CanvasRenderingContext2D} context - The 2d rendering context of the canvas.\n     * @param {HTMLCanvasElement} canvas - The canvas for compression.\n     * @example\n     * function (context, canvas) {\n     *   context.fillStyle = '#fff';\n     * }\n     */\n    beforeDraw: null,\n\n    /**\n     * The hook function to execute after drew the image into the canvas for compression.\n     * @type {Function}\n     * @param {CanvasRenderingContext2D} context - The 2d rendering context of the canvas.\n     * @param {HTMLCanvasElement} canvas - The canvas for compression.\n     * @example\n     * function (context, canvas) {\n     *   context.filter = 'grayscale(100%)';\n     * }\n     */\n    drew: null,\n\n    /**\n     * The hook function to execute when success to compress the image.\n     * @type {Function}\n     * @param {File} file - The compressed image File object.\n     * @example\n     * function (file) {\n     *   console.log(file);\n     * }\n     */\n    success: null,\n\n    /**\n     * The hook function to execute when fail to compress the image.\n     * @type {Function}\n     * @param {Error} err - An Error object.\n     * @example\n     * function (err) {\n     *   console.log(err.message);\n     * }\n     */\n    error: null\n  };\n\n  var IS_BROWSER = typeof window !== 'undefined' && typeof window.document !== 'undefined';\n  var WINDOW = IS_BROWSER ? window : {};\n\n  /**\n   * Check if the given value is a positive number.\n   * @param {*} value - The value to check.\n   * @returns {boolean} Returns `true` if the given value is a positive number, else `false`.\n   */\n\n  var isPositiveNumber = function isPositiveNumber(value) {\n    return value > 0 && value < Infinity;\n  };\n  var slice = Array.prototype.slice;\n  /**\n   * Convert array-like or iterable object to an array.\n   * @param {*} value - The value to convert.\n   * @returns {Array} Returns a new array.\n   */\n\n  function toArray(value) {\n    return Array.from ? Array.from(value) : slice.call(value);\n  }\n  var REGEXP_IMAGE_TYPE = /^image\\/.+$/;\n  /**\n   * Check if the given value is a mime type of image.\n   * @param {*} value - The value to check.\n   * @returns {boolean} Returns `true` if the given is a mime type of image, else `false`.\n   */\n\n  function isImageType(value) {\n    return REGEXP_IMAGE_TYPE.test(value);\n  }\n  /**\n   * Convert image type to extension.\n   * @param {string} value - The image type to convert.\n   * @returns {boolean} Returns the image extension.\n   */\n\n  function imageTypeToExtension(value) {\n    var extension = isImageType(value) ? value.substr(6) : '';\n\n    if (extension === 'jpeg') {\n      extension = 'jpg';\n    }\n\n    return \".\".concat(extension);\n  }\n  var fromCharCode = String.fromCharCode;\n  /**\n   * Get string from char code in data view.\n   * @param {DataView} dataView - The data view for read.\n   * @param {number} start - The start index.\n   * @param {number} length - The read length.\n   * @returns {string} The read result.\n   */\n\n  function getStringFromCharCode(dataView, start, length) {\n    var str = '';\n    var i;\n    length += start;\n\n    for (i = start; i < length; i += 1) {\n      str += fromCharCode(dataView.getUint8(i));\n    }\n\n    return str;\n  }\n  var btoa = WINDOW.btoa;\n  /**\n   * Transform array buffer to Data URL.\n   * @param {ArrayBuffer} arrayBuffer - The array buffer to transform.\n   * @param {string} mimeType - The mime type of the Data URL.\n   * @returns {string} The result Data URL.\n   */\n\n  function arrayBufferToDataURL(arrayBuffer, mimeType) {\n    var chunks = [];\n    var chunkSize = 8192;\n    var uint8 = new Uint8Array(arrayBuffer);\n\n    while (uint8.length > 0) {\n      // XXX: Babel's `toConsumableArray` helper will throw error in IE or Safari 9\n      // eslint-disable-next-line prefer-spread\n      chunks.push(fromCharCode.apply(null, toArray(uint8.subarray(0, chunkSize))));\n      uint8 = uint8.subarray(chunkSize);\n    }\n\n    return \"data:\".concat(mimeType, \";base64,\").concat(btoa(chunks.join('')));\n  }\n  /**\n   * Get orientation value from given array buffer.\n   * @param {ArrayBuffer} arrayBuffer - The array buffer to read.\n   * @returns {number} The read orientation value.\n   */\n\n  function resetAndGetOrientation(arrayBuffer) {\n    var dataView = new DataView(arrayBuffer);\n    var orientation; // Ignores range error when the image does not have correct Exif information\n\n    try {\n      var littleEndian;\n      var app1Start;\n      var ifdStart; // Only handle JPEG image (start by 0xFFD8)\n\n      if (dataView.getUint8(0) === 0xFF && dataView.getUint8(1) === 0xD8) {\n        var length = dataView.byteLength;\n        var offset = 2;\n\n        while (offset + 1 < length) {\n          if (dataView.getUint8(offset) === 0xFF && dataView.getUint8(offset + 1) === 0xE1) {\n            app1Start = offset;\n            break;\n          }\n\n          offset += 1;\n        }\n      }\n\n      if (app1Start) {\n        var exifIDCode = app1Start + 4;\n        var tiffOffset = app1Start + 10;\n\n        if (getStringFromCharCode(dataView, exifIDCode, 4) === 'Exif') {\n          var endianness = dataView.getUint16(tiffOffset);\n          littleEndian = endianness === 0x4949;\n\n          if (littleEndian || endianness === 0x4D4D\n          /* bigEndian */\n          ) {\n            if (dataView.getUint16(tiffOffset + 2, littleEndian) === 0x002A) {\n              var firstIFDOffset = dataView.getUint32(tiffOffset + 4, littleEndian);\n\n              if (firstIFDOffset >= 0x00000008) {\n                ifdStart = tiffOffset + firstIFDOffset;\n              }\n            }\n          }\n        }\n      }\n\n      if (ifdStart) {\n        var _length = dataView.getUint16(ifdStart, littleEndian);\n\n        var _offset;\n\n        var i;\n\n        for (i = 0; i < _length; i += 1) {\n          _offset = ifdStart + i * 12 + 2;\n\n          if (dataView.getUint16(_offset, littleEndian) === 0x0112\n          /* Orientation */\n          ) {\n            // 8 is the offset of the current tag's value\n            _offset += 8; // Get the original orientation value\n\n            orientation = dataView.getUint16(_offset, littleEndian); // Override the orientation with its default value\n\n            dataView.setUint16(_offset, 1, littleEndian);\n            break;\n          }\n        }\n      }\n    } catch (e) {\n      orientation = 1;\n    }\n\n    return orientation;\n  }\n  /**\n   * Parse Exif Orientation value.\n   * @param {number} orientation - The orientation to parse.\n   * @returns {Object} The parsed result.\n   */\n\n  function parseOrientation(orientation) {\n    var rotate = 0;\n    var scaleX = 1;\n    var scaleY = 1;\n\n    switch (orientation) {\n      // Flip horizontal\n      case 2:\n        scaleX = -1;\n        break;\n      // Rotate left 180Â°\n\n      case 3:\n        rotate = -180;\n        break;\n      // Flip vertical\n\n      case 4:\n        scaleY = -1;\n        break;\n      // Flip vertical and rotate right 90Â°\n\n      case 5:\n        rotate = 90;\n        scaleY = -1;\n        break;\n      // Rotate right 90Â°\n\n      case 6:\n        rotate = 90;\n        break;\n      // Flip horizontal and rotate right 90Â°\n\n      case 7:\n        rotate = 90;\n        scaleX = -1;\n        break;\n      // Rotate left 90Â°\n\n      case 8:\n        rotate = -90;\n        break;\n    }\n\n    return {\n      rotate: rotate,\n      scaleX: scaleX,\n      scaleY: scaleY\n    };\n  }\n  var REGEXP_DECIMALS = /\\.\\d*(?:0|9){12}\\d*$/;\n  /**\n   * Normalize decimal number.\n   * Check out {@link https://0.30000000000000004.com/}\n   * @param {number} value - The value to normalize.\n   * @param {number} [times=100000000000] - The times for normalizing.\n   * @returns {number} Returns the normalized number.\n   */\n\n  function normalizeDecimalNumber(value) {\n    var times = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 100000000000;\n    return REGEXP_DECIMALS.test(value) ? Math.round(value * times) / times : value;\n  }\n  /**\n   * Get the max sizes in a rectangle under the given aspect ratio.\n   * @param {Object} data - The original sizes.\n   * @param {string} [type='contain'] - The adjust type.\n   * @returns {Object} The result sizes.\n   */\n\n  function getAdjustedSizes(_ref) {\n    var aspectRatio = _ref.aspectRatio,\n        height = _ref.height,\n        width = _ref.width;\n    var type = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 'none';\n    var isValidWidth = isPositiveNumber(width);\n    var isValidHeight = isPositiveNumber(height);\n\n    if (isValidWidth && isValidHeight) {\n      var adjustedWidth = height * aspectRatio;\n\n      if ((type === 'contain' || type === 'none') && adjustedWidth > width || type === 'cover' && adjustedWidth < width) {\n        height = width / aspectRatio;\n      } else {\n        width = height * aspectRatio;\n      }\n    } else if (isValidWidth) {\n      height = width / aspectRatio;\n    } else if (isValidHeight) {\n      width = height * aspectRatio;\n    }\n\n    return {\n      width: width,\n      height: height\n    };\n  }\n\n  var ArrayBuffer$1 = WINDOW.ArrayBuffer,\n      FileReader = WINDOW.FileReader;\n  var URL = WINDOW.URL || WINDOW.webkitURL;\n  var REGEXP_EXTENSION = /\\.\\w+$/;\n  var AnotherCompressor = WINDOW.Compressor;\n  /**\n   * Creates a new image compressor.\n   * @class\n   */\n\n  var Compressor = /*#__PURE__*/function () {\n    /**\n     * The constructor of Compressor.\n     * @param {File|Blob} file - The target image file for compressing.\n     * @param {Object} [options] - The options for compressing.\n     */\n    function Compressor(file, options) {\n      _classCallCheck(this, Compressor);\n\n      this.file = file;\n      this.image = new Image();\n      this.options = _objectSpread2(_objectSpread2({}, DEFAULTS), options);\n      this.aborted = false;\n      this.result = null;\n      this.init();\n    }\n\n    _createClass(Compressor, [{\n      key: \"init\",\n      value: function init() {\n        var _this = this;\n\n        var file = this.file,\n            options = this.options;\n\n        if (!isBlob(file)) {\n          this.fail(new Error('The first argument must be a File or Blob object.'));\n          return;\n        }\n\n        var mimeType = file.type;\n\n        if (!isImageType(mimeType)) {\n          this.fail(new Error('The first argument must be an image File or Blob object.'));\n          return;\n        }\n\n        if (!URL || !FileReader) {\n          this.fail(new Error('The current browser does not support image compression.'));\n          return;\n        }\n\n        if (!ArrayBuffer$1) {\n          options.checkOrientation = false;\n        }\n\n        if (URL && !options.checkOrientation) {\n          this.load({\n            url: URL.createObjectURL(file)\n          });\n        } else {\n          var reader = new FileReader();\n          var checkOrientation = options.checkOrientation && mimeType === 'image/jpeg';\n          this.reader = reader;\n\n          reader.onload = function (_ref) {\n            var target = _ref.target;\n            var result = target.result;\n            var data = {};\n\n            if (checkOrientation) {\n              // Reset the orientation value to its default value 1\n              // as some iOS browsers will render image with its orientation\n              var orientation = resetAndGetOrientation(result);\n\n              if (orientation > 1 || !URL) {\n                // Generate a new URL which has the default orientation value\n                data.url = arrayBufferToDataURL(result, mimeType);\n\n                if (orientation > 1) {\n                  _extends(data, parseOrientation(orientation));\n                }\n              } else {\n                data.url = URL.createObjectURL(file);\n              }\n            } else {\n              data.url = result;\n            }\n\n            _this.load(data);\n          };\n\n          reader.onabort = function () {\n            _this.fail(new Error('Aborted to read the image with FileReader.'));\n          };\n\n          reader.onerror = function () {\n            _this.fail(new Error('Failed to read the image with FileReader.'));\n          };\n\n          reader.onloadend = function () {\n            _this.reader = null;\n          };\n\n          if (checkOrientation) {\n            reader.readAsArrayBuffer(file);\n          } else {\n            reader.readAsDataURL(file);\n          }\n        }\n      }\n    }, {\n      key: \"load\",\n      value: function load(data) {\n        var _this2 = this;\n\n        var file = this.file,\n            image = this.image;\n\n        image.onload = function () {\n          _this2.draw(_objectSpread2(_objectSpread2({}, data), {}, {\n            naturalWidth: image.naturalWidth,\n            naturalHeight: image.naturalHeight\n          }));\n        };\n\n        image.onabort = function () {\n          _this2.fail(new Error('Aborted to load the image.'));\n        };\n\n        image.onerror = function () {\n          _this2.fail(new Error('Failed to load the image.'));\n        }; // Match all browsers that use WebKit as the layout engine in iOS devices,\n        // such as Safari for iOS, Chrome for iOS, and in-app browsers.\n\n\n        if (WINDOW.navigator && /(?:iPad|iPhone|iPod).*?AppleWebKit/i.test(WINDOW.navigator.userAgent)) {\n          // Fix the `The operation is insecure` error (#57)\n          image.crossOrigin = 'anonymous';\n        }\n\n        image.alt = file.name;\n        image.src = data.url;\n      }\n    }, {\n      key: \"draw\",\n      value: function draw(_ref2) {\n        var _this3 = this;\n\n        var naturalWidth = _ref2.naturalWidth,\n            naturalHeight = _ref2.naturalHeight,\n            _ref2$rotate = _ref2.rotate,\n            rotate = _ref2$rotate === void 0 ? 0 : _ref2$rotate,\n            _ref2$scaleX = _ref2.scaleX,\n            scaleX = _ref2$scaleX === void 0 ? 1 : _ref2$scaleX,\n            _ref2$scaleY = _ref2.scaleY,\n            scaleY = _ref2$scaleY === void 0 ? 1 : _ref2$scaleY;\n        var file = this.file,\n            image = this.image,\n            options = this.options;\n        var canvas = document.createElement('canvas');\n        var context = canvas.getContext('2d');\n        var is90DegreesRotated = Math.abs(rotate) % 180 === 90;\n        var resizable = (options.resize === 'contain' || options.resize === 'cover') && isPositiveNumber(options.width) && isPositiveNumber(options.height);\n        var maxWidth = Math.max(options.maxWidth, 0) || Infinity;\n        var maxHeight = Math.max(options.maxHeight, 0) || Infinity;\n        var minWidth = Math.max(options.minWidth, 0) || 0;\n        var minHeight = Math.max(options.minHeight, 0) || 0;\n        var aspectRatio = naturalWidth / naturalHeight;\n        var width = options.width,\n            height = options.height;\n\n        if (is90DegreesRotated) {\n          var _ref3 = [maxHeight, maxWidth];\n          maxWidth = _ref3[0];\n          maxHeight = _ref3[1];\n          var _ref4 = [minHeight, minWidth];\n          minWidth = _ref4[0];\n          minHeight = _ref4[1];\n          var _ref5 = [height, width];\n          width = _ref5[0];\n          height = _ref5[1];\n        }\n\n        if (resizable) {\n          aspectRatio = width / height;\n        }\n\n        var _getAdjustedSizes = getAdjustedSizes({\n          aspectRatio: aspectRatio,\n          width: maxWidth,\n          height: maxHeight\n        }, 'contain');\n\n        maxWidth = _getAdjustedSizes.width;\n        maxHeight = _getAdjustedSizes.height;\n\n        var _getAdjustedSizes2 = getAdjustedSizes({\n          aspectRatio: aspectRatio,\n          width: minWidth,\n          height: minHeight\n        }, 'cover');\n\n        minWidth = _getAdjustedSizes2.width;\n        minHeight = _getAdjustedSizes2.height;\n\n        if (resizable) {\n          var _getAdjustedSizes3 = getAdjustedSizes({\n            aspectRatio: aspectRatio,\n            width: width,\n            height: height\n          }, options.resize);\n\n          width = _getAdjustedSizes3.width;\n          height = _getAdjustedSizes3.height;\n        } else {\n          var _getAdjustedSizes4 = getAdjustedSizes({\n            aspectRatio: aspectRatio,\n            width: width,\n            height: height\n          });\n\n          var _getAdjustedSizes4$wi = _getAdjustedSizes4.width;\n          width = _getAdjustedSizes4$wi === void 0 ? naturalWidth : _getAdjustedSizes4$wi;\n          var _getAdjustedSizes4$he = _getAdjustedSizes4.height;\n          height = _getAdjustedSizes4$he === void 0 ? naturalHeight : _getAdjustedSizes4$he;\n        }\n\n        width = Math.floor(normalizeDecimalNumber(Math.min(Math.max(width, minWidth), maxWidth)));\n        height = Math.floor(normalizeDecimalNumber(Math.min(Math.max(height, minHeight), maxHeight)));\n        var destX = -width / 2;\n        var destY = -height / 2;\n        var destWidth = width;\n        var destHeight = height;\n        var params = [];\n\n        if (resizable) {\n          var srcX = 0;\n          var srcY = 0;\n          var srcWidth = naturalWidth;\n          var srcHeight = naturalHeight;\n\n          var _getAdjustedSizes5 = getAdjustedSizes({\n            aspectRatio: aspectRatio,\n            width: naturalWidth,\n            height: naturalHeight\n          }, {\n            contain: 'cover',\n            cover: 'contain'\n          }[options.resize]);\n\n          srcWidth = _getAdjustedSizes5.width;\n          srcHeight = _getAdjustedSizes5.height;\n          srcX = (naturalWidth - srcWidth) / 2;\n          srcY = (naturalHeight - srcHeight) / 2;\n          params.push(srcX, srcY, srcWidth, srcHeight);\n        }\n\n        params.push(destX, destY, destWidth, destHeight);\n\n        if (is90DegreesRotated) {\n          var _ref6 = [height, width];\n          width = _ref6[0];\n          height = _ref6[1];\n        }\n\n        canvas.width = width;\n        canvas.height = height;\n\n        if (!isImageType(options.mimeType)) {\n          options.mimeType = file.type;\n        }\n\n        var fillStyle = 'transparent'; // Converts PNG files over the `convertSize` to JPEGs.\n\n        if (file.size > options.convertSize && options.convertTypes.indexOf(options.mimeType) >= 0) {\n          options.mimeType = 'image/jpeg';\n        }\n\n        if (options.mimeType === 'image/jpeg') {\n          fillStyle = '#fff';\n        } // Override the default fill color (#000, black)\n\n\n        context.fillStyle = fillStyle;\n        context.fillRect(0, 0, width, height);\n\n        if (options.beforeDraw) {\n          options.beforeDraw.call(this, context, canvas);\n        }\n\n        if (this.aborted) {\n          return;\n        }\n\n        context.save();\n        context.translate(width / 2, height / 2);\n        context.rotate(rotate * Math.PI / 180);\n        context.scale(scaleX, scaleY);\n        context.drawImage.apply(context, [image].concat(params));\n        context.restore();\n\n        if (options.drew) {\n          options.drew.call(this, context, canvas);\n        }\n\n        if (this.aborted) {\n          return;\n        }\n\n        var done = function done(result) {\n          if (!_this3.aborted) {\n            _this3.done({\n              naturalWidth: naturalWidth,\n              naturalHeight: naturalHeight,\n              result: result\n            });\n          }\n        };\n\n        if (canvas.toBlob) {\n          canvas.toBlob(done, options.mimeType, options.quality);\n        } else {\n          done(toBlob(canvas.toDataURL(options.mimeType, options.quality)));\n        }\n      }\n    }, {\n      key: \"done\",\n      value: function done(_ref7) {\n        var naturalWidth = _ref7.naturalWidth,\n            naturalHeight = _ref7.naturalHeight,\n            result = _ref7.result;\n        var file = this.file,\n            image = this.image,\n            options = this.options;\n\n        if (URL && !options.checkOrientation) {\n          URL.revokeObjectURL(image.src);\n        }\n\n        if (result) {\n          // Returns original file if the result is greater than it and without size related options\n          if (options.strict && result.size > file.size && options.mimeType === file.type && !(options.width > naturalWidth || options.height > naturalHeight || options.minWidth > naturalWidth || options.minHeight > naturalHeight || options.maxWidth < naturalWidth || options.maxHeight < naturalHeight)) {\n            result = file;\n          } else {\n            var date = new Date();\n            result.lastModified = date.getTime();\n            result.lastModifiedDate = date;\n            result.name = file.name; // Convert the extension to match its type\n\n            if (result.name && result.type !== file.type) {\n              result.name = result.name.replace(REGEXP_EXTENSION, imageTypeToExtension(result.type));\n            }\n          }\n        } else {\n          // Returns original file if the result is null in some cases.\n          result = file;\n        }\n\n        this.result = result;\n\n        if (options.success) {\n          options.success.call(this, result);\n        }\n      }\n    }, {\n      key: \"fail\",\n      value: function fail(err) {\n        var options = this.options;\n\n        if (options.error) {\n          options.error.call(this, err);\n        } else {\n          throw err;\n        }\n      }\n    }, {\n      key: \"abort\",\n      value: function abort() {\n        if (!this.aborted) {\n          this.aborted = true;\n\n          if (this.reader) {\n            this.reader.abort();\n          } else if (!this.image.complete) {\n            this.image.onload = null;\n            this.image.onabort();\n          } else {\n            this.fail(new Error('The compression process has been aborted.'));\n          }\n        }\n      }\n      /**\n       * Get the no conflict compressor class.\n       * @returns {Compressor} The compressor class.\n       */\n\n    }], [{\n      key: \"noConflict\",\n      value: function noConflict() {\n        window.Compressor = AnotherCompressor;\n        return Compressor;\n      }\n      /**\n       * Change the default options.\n       * @param {Object} options - The new default options.\n       */\n\n    }, {\n      key: \"setDefaults\",\n      value: function setDefaults(options) {\n        _extends(DEFAULTS, options);\n      }\n    }]);\n\n    return Compressor;\n  }();\n\n  return Compressor;\n\n}));\n"],"mappings":"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"},"metadata":{},"sourceType":"script"}