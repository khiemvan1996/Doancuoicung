{"ast":null,"code":"import axiosClient from './axiosClient';\nconst URL = '/word';\nconst wordApi = {\n  postContributeWord: wordInfor => {\n    return axiosClient.post(`${URL}/contribute/add-word`, {\n      ...wordInfor\n    });\n  },\n  getCheckWordExistence: (word, type) => {\n    return axiosClient.get(`${URL}/exist`, {\n      params: {\n        word,\n        type\n      }\n    });\n  },\n  // get word, type, phonetic, mean\n  getWordList: function () {\n    let page = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : 1;\n    let perPage = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 8;\n    let packInfo = arguments.length > 2 ? arguments[2] : undefined;\n    let sortType = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : 'rand';\n    return axiosClient.get(`${URL}/pack`, {\n      params: {\n        page,\n        perPage,\n        packInfo: JSON.stringify(packInfo),\n        sortType\n      }\n    });\n  },\n  getSearchWord: function () {\n    let word = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : '';\n    let isCompact = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : false;\n    return axiosClient.get(`${URL}/search-word`, {\n      params: {\n        word,\n        isCompact\n      }\n    });\n  },\n  getWordDetails: function () {\n    let word = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : '';\n    return axiosClient.get(`${URL}/word-details`, {\n      params: {\n        word\n      }\n    });\n  },\n  getUserFavoriteList: function () {\n    let page = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : 0;\n    let perPage = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 20;\n    let sortType = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : 'rand';\n    return axiosClient.get(`${URL}/favorite-list`, {\n      params: {\n        page,\n        perPage,\n        sortType\n      }\n    });\n  }\n};\nexport default wordApi;","map":{"version":3,"names":["axiosClient","URL","wordApi","postContributeWord","wordInfor","post","getCheckWordExistence","word","type","get","params","getWordList","page","perPage","packInfo","sortType","JSON","stringify","getSearchWord","isCompact","getWordDetails","getUserFavoriteList"],"sources":["/Users/mac/Documents/Doantotnghiep/Doantotnghiep/dynonary-english/frontend/src/apis/wordApi.js"],"sourcesContent":["import axiosClient from './axiosClient';\n\nconst URL = '/word';\n\nconst wordApi = {\n  postContributeWord: (wordInfor) => {\n    return axiosClient.post(`${URL}/contribute/add-word`, { ...wordInfor });\n  },\n\n  getCheckWordExistence: (word, type) => {\n    return axiosClient.get(`${URL}/exist`, { params: { word, type } });\n  },\n\n  // get word, type, phonetic, mean\n  getWordList: (page = 1, perPage = 8, packInfo, sortType = 'rand') => {\n    return axiosClient.get(`${URL}/pack`, {\n      params: { page, perPage, packInfo: JSON.stringify(packInfo), sortType },\n    });\n  },\n\n  getSearchWord: (word = '', isCompact = false) => {\n    return axiosClient.get(`${URL}/search-word`, {\n      params: { word, isCompact },\n    });\n  },\n\n  getWordDetails: (word = '') => {\n    return axiosClient.get(`${URL}/word-details`, { params: { word } });\n  },\n\n  getUserFavoriteList: (page = 0, perPage = 20, sortType = 'rand') => {\n    return axiosClient.get(`${URL}/favorite-list`, {\n      params: { page, perPage, sortType },\n    });\n  },\n};\n\nexport default wordApi;\n"],"mappings":"AAAA,OAAOA,WAAW,MAAM,eAAe;AAEvC,MAAMC,GAAG,GAAG,OAAO;AAEnB,MAAMC,OAAO,GAAG;EACdC,kBAAkB,EAAGC,SAAS,IAAK;IACjC,OAAOJ,WAAW,CAACK,IAAI,CAAE,GAAEJ,GAAI,sBAAqB,EAAE;MAAE,GAAGG;IAAU,CAAC,CAAC;EACzE,CAAC;EAEDE,qBAAqB,EAAE,CAACC,IAAI,EAAEC,IAAI,KAAK;IACrC,OAAOR,WAAW,CAACS,GAAG,CAAE,GAAER,GAAI,QAAO,EAAE;MAAES,MAAM,EAAE;QAAEH,IAAI;QAAEC;MAAK;IAAE,CAAC,CAAC;EACpE,CAAC;EAED;EACAG,WAAW,EAAE,YAAwD;IAAA,IAAvDC,IAAI,uEAAG,CAAC;IAAA,IAAEC,OAAO,uEAAG,CAAC;IAAA,IAAEC,QAAQ;IAAA,IAAEC,QAAQ,uEAAG,MAAM;IAC9D,OAAOf,WAAW,CAACS,GAAG,CAAE,GAAER,GAAI,OAAM,EAAE;MACpCS,MAAM,EAAE;QAAEE,IAAI;QAAEC,OAAO;QAAEC,QAAQ,EAAEE,IAAI,CAACC,SAAS,CAACH,QAAQ,CAAC;QAAEC;MAAS;IACxE,CAAC,CAAC;EACJ,CAAC;EAEDG,aAAa,EAAE,YAAkC;IAAA,IAAjCX,IAAI,uEAAG,EAAE;IAAA,IAAEY,SAAS,uEAAG,KAAK;IAC1C,OAAOnB,WAAW,CAACS,GAAG,CAAE,GAAER,GAAI,cAAa,EAAE;MAC3CS,MAAM,EAAE;QAAEH,IAAI;QAAEY;MAAU;IAC5B,CAAC,CAAC;EACJ,CAAC;EAEDC,cAAc,EAAE,YAAe;IAAA,IAAdb,IAAI,uEAAG,EAAE;IACxB,OAAOP,WAAW,CAACS,GAAG,CAAE,GAAER,GAAI,eAAc,EAAE;MAAES,MAAM,EAAE;QAAEH;MAAK;IAAE,CAAC,CAAC;EACrE,CAAC;EAEDc,mBAAmB,EAAE,YAA+C;IAAA,IAA9CT,IAAI,uEAAG,CAAC;IAAA,IAAEC,OAAO,uEAAG,EAAE;IAAA,IAAEE,QAAQ,uEAAG,MAAM;IAC7D,OAAOf,WAAW,CAACS,GAAG,CAAE,GAAER,GAAI,gBAAe,EAAE;MAC7CS,MAAM,EAAE;QAAEE,IAAI;QAAEC,OAAO;QAAEE;MAAS;IACpC,CAAC,CAAC;EACJ;AACF,CAAC;AAED,eAAeb,OAAO"},"metadata":{},"sourceType":"module"}