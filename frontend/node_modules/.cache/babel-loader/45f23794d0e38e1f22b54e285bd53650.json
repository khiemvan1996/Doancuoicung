{"ast":null,"code":"var _jsxFileName = \"/Users/mac/Documents/Doantotnghiep/Doantotnghiep/dynonary-english/frontend/src/components/CommunicationPhrase/data.js\",\n  _s = $RefreshSig$();\nimport sentenceApi from 'apis/sentenceApi';\nimport { equalArray } from 'helper';\nimport React, { useEffect, useRef, useState } from 'react';\nimport CommunicationPhrase from '.';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst perPage = 20;\nfunction CommunicationPhraseData() {\n  _s();\n  const [page, setPage] = useState(1);\n  const [loading, setLoading] = useState(true);\n  const [list, setList] = useState([]);\n  const [more, setMore] = useState(true); // toggle infinite scrolling\n  const [isFirstLoad, setIsFirstLoad] = useState(true);\n  const [topicList, setTopicList] = useState([]);\n  const totalPage = useRef(0);\n  const nextPage = () => {\n    if (page < totalPage.current) {\n      setPage(page + 1);\n    } else {\n      setMore(false);\n    }\n  };\n  const onSelectTopic = topics => {\n    if (!topics || !Array.isArray(topics) || equalArray(topics, topicList)) {\n      return;\n    }\n    setPage(1);\n    setMore(true);\n    setList([]);\n    setTopicList([...topics]);\n    totalPage.current = 0;\n  };\n\n  // get total sentence\n  useEffect(() => {\n    let isSub = true;\n    (async function () {\n      try {\n        const apiRes = await sentenceApi.getTotalSentences(topicList);\n        if (apiRes.status === 200 && isSub) {\n          const {\n            total = 0\n          } = apiRes.data;\n          totalPage.current = Math.ceil(total / perPage);\n        }\n      } catch (error) {}\n    })();\n    return () => isSub = false;\n  }, [topicList]);\n\n  // get sentence list\n  useEffect(() => {\n    let isSub = true;\n    (async function () {\n      try {\n        setLoading(true);\n        const apiRes = await sentenceApi.getSentenceList(page, perPage, topicList);\n        if (apiRes.status === 200 && isSub) {\n          const {\n            sentenceList = []\n          } = apiRes.data;\n          setList([...list, ...sentenceList]);\n        }\n      } catch (error) {} finally {\n        if (isSub) {\n          setLoading(false);\n          isFirstLoad && setIsFirstLoad(false);\n        }\n      }\n    })();\n    return () => isSub = false;\n  }, [page, topicList]);\n  return /*#__PURE__*/_jsxDEV(CommunicationPhrase, {\n    list: list,\n    isFirstLoad: isFirstLoad,\n    loading: loading,\n    more: more,\n    onLoadData: nextPage,\n    onSelectTopic: v => onSelectTopic(v)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 84,\n    columnNumber: 5\n  }, this);\n}\n_s(CommunicationPhraseData, \"Ynvkvs6kK8OZtnvxkR6mpaZH1mk=\");\n_c = CommunicationPhraseData;\nexport default CommunicationPhraseData;\nvar _c;\n$RefreshReg$(_c, \"CommunicationPhraseData\");","map":{"version":3,"names":["sentenceApi","equalArray","React","useEffect","useRef","useState","CommunicationPhrase","perPage","CommunicationPhraseData","page","setPage","loading","setLoading","list","setList","more","setMore","isFirstLoad","setIsFirstLoad","topicList","setTopicList","totalPage","nextPage","current","onSelectTopic","topics","Array","isArray","isSub","apiRes","getTotalSentences","status","total","data","Math","ceil","error","getSentenceList","sentenceList","v"],"sources":["/Users/mac/Documents/Doantotnghiep/Doantotnghiep/dynonary-english/frontend/src/components/CommunicationPhrase/data.js"],"sourcesContent":["import sentenceApi from 'apis/sentenceApi';\nimport { equalArray } from 'helper';\nimport React, { useEffect, useRef, useState } from 'react';\nimport CommunicationPhrase from '.';\n\nconst perPage = 20;\n\nfunction CommunicationPhraseData() {\n  const [page, setPage] = useState(1);\n  const [loading, setLoading] = useState(true);\n  const [list, setList] = useState([]);\n  const [more, setMore] = useState(true); // toggle infinite scrolling\n  const [isFirstLoad, setIsFirstLoad] = useState(true);\n  const [topicList, setTopicList] = useState([]);\n  const totalPage = useRef(0);\n\n  const nextPage = () => {\n    if (page < totalPage.current) {\n      setPage(page + 1);\n    } else {\n      setMore(false);\n    }\n  };\n\n  const onSelectTopic = (topics) => {\n    if (!topics || !Array.isArray(topics) || equalArray(topics, topicList)) {\n      return;\n    }\n\n    setPage(1);\n    setMore(true);\n    setList([]);\n    setTopicList([...topics]);\n    totalPage.current = 0;\n  };\n\n  // get total sentence\n  useEffect(() => {\n    let isSub = true;\n\n    (async function () {\n      try {\n        const apiRes = await sentenceApi.getTotalSentences(topicList);\n\n        if (apiRes.status === 200 && isSub) {\n          const { total = 0 } = apiRes.data;\n          totalPage.current = Math.ceil(total / perPage);\n        }\n      } catch (error) {}\n    })();\n\n    return () => (isSub = false);\n  }, [topicList]);\n\n  // get sentence list\n  useEffect(() => {\n    let isSub = true;\n\n    (async function () {\n      try {\n        setLoading(true);\n        const apiRes = await sentenceApi.getSentenceList(\n          page,\n          perPage,\n          topicList,\n        );\n        if (apiRes.status === 200 && isSub) {\n          const { sentenceList = [] } = apiRes.data;\n          setList([...list, ...sentenceList]);\n        }\n      } catch (error) {\n      } finally {\n        if (isSub) {\n          setLoading(false);\n          isFirstLoad && setIsFirstLoad(false);\n        }\n      }\n    })();\n\n    return () => (isSub = false);\n  }, [page, topicList]);\n\n  return (\n    <CommunicationPhrase\n      list={list}\n      isFirstLoad={isFirstLoad}\n      loading={loading}\n      more={more}\n      onLoadData={nextPage}\n      onSelectTopic={(v) => onSelectTopic(v)}\n    />\n  );\n}\n\nexport default CommunicationPhraseData;\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}