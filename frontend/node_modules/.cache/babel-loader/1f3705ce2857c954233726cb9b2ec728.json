{"ast":null,"code":"var _jsxFileName = \"/Users/mac/Documents/Doantotnghiep/Doantotnghiep/dynonary-english/frontend/src/components/UI/WordFavorite.js\",\n  _s = $RefreshSig$();\nimport FavoriteIcon from '@material-ui/icons/Favorite';\nimport UnFavoriteIcon from '@material-ui/icons/FavoriteBorder';\nimport accountApi from 'apis/accountApi';\nimport { ROUTES } from 'constant';\nimport PropTypes from 'prop-types';\nimport React from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { useHistory } from 'react-router-dom';\nimport { setMessage } from 'redux/slices/message.slice';\nimport { setAddFavorites } from 'redux/slices/userInfo.slice';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nfunction WordFavorite(_ref) {\n  _s();\n  let {\n    word\n  } = _ref;\n  const {\n    isAuth,\n    username,\n    favoriteList\n  } = useSelector(state => state.userInfo);\n  const history = useHistory();\n  const dispatch = useDispatch();\n  const isFavorite = favoriteList.findIndex(i => i.toLowerCase() === word.toLowerCase()) !== -1;\n  const handleClick = async () => {\n    try {\n      const apiRes = await accountApi.putToggleWordFavorite(username, word, !isFavorite);\n      if (apiRes.status === 200) {\n        dispatch(setAddFavorites({\n          word,\n          isAdd: !isFavorite\n        }));\n      }\n    } catch (error) {\n      var _error$response, _error$response$data;\n      const message = ((_error$response = error.response) === null || _error$response === void 0 ? void 0 : (_error$response$data = _error$response.data) === null || _error$response$data === void 0 ? void 0 : _error$response$data.message) || 'Thất bại, thử lại !';\n      dispatch(setMessage({\n        type: 'error',\n        message\n      }));\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: isAuth ? /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: isFavorite ? /*#__PURE__*/_jsxDEV(FavoriteIcon, {\n        onClick: handleClick,\n        className: \"dyno-favorite active\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 13\n      }, this) : /*#__PURE__*/_jsxDEV(UnFavoriteIcon, {\n        onClick: handleClick,\n        className: \"dyno-favorite\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 13\n      }, this)\n    }, void 0, false) : /*#__PURE__*/_jsxDEV(UnFavoriteIcon, {\n      onClick: () => history.push(ROUTES.LOGIN),\n      className: \"dyno-favorite\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 9\n    }, this)\n  }, void 0, false);\n}\n_s(WordFavorite, \"aBBYEXICya5Tp65wBwejaddCsg8=\", false, function () {\n  return [useSelector, useHistory, useDispatch];\n});\n_c = WordFavorite;\nWordFavorite.propTypes = {\n  word: PropTypes.string\n};\nWordFavorite.defaultProps = {\n  word: ''\n};\nexport default WordFavorite;\nvar _c;\n$RefreshReg$(_c, \"WordFavorite\");","map":{"version":3,"names":["FavoriteIcon","UnFavoriteIcon","accountApi","ROUTES","PropTypes","React","useDispatch","useSelector","useHistory","setMessage","setAddFavorites","WordFavorite","word","isAuth","username","favoriteList","state","userInfo","history","dispatch","isFavorite","findIndex","i","toLowerCase","handleClick","apiRes","putToggleWordFavorite","status","isAdd","error","message","response","data","type","push","LOGIN","propTypes","string","defaultProps"],"sources":["/Users/mac/Documents/Doantotnghiep/Doantotnghiep/dynonary-english/frontend/src/components/UI/WordFavorite.js"],"sourcesContent":["import FavoriteIcon from '@material-ui/icons/Favorite';\nimport UnFavoriteIcon from '@material-ui/icons/FavoriteBorder';\nimport accountApi from 'apis/accountApi';\nimport { ROUTES } from 'constant';\nimport PropTypes from 'prop-types';\nimport React from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { useHistory } from 'react-router-dom';\nimport { setMessage } from 'redux/slices/message.slice';\nimport { setAddFavorites } from 'redux/slices/userInfo.slice';\n\nfunction WordFavorite({ word }) {\n  const { isAuth, username, favoriteList } = useSelector(\n    (state) => state.userInfo,\n  );\n  const history = useHistory();\n  const dispatch = useDispatch();\n\n  const isFavorite =\n    favoriteList.findIndex((i) => i.toLowerCase() === word.toLowerCase()) !==\n    -1;\n\n  const handleClick = async () => {\n    try {\n      const apiRes = await accountApi.putToggleWordFavorite(\n        username,\n        word,\n        !isFavorite,\n      );\n      if (apiRes.status === 200) {\n        dispatch(setAddFavorites({ word, isAdd: !isFavorite }));\n      }\n    } catch (error) {\n      const message = error.response?.data?.message || 'Thất bại, thử lại !';\n      dispatch(setMessage({ type: 'error', message }));\n    }\n  };\n\n  return (\n    <>\n      {isAuth ? (\n        <>\n          {isFavorite ? (\n            <FavoriteIcon\n              onClick={handleClick}\n              className=\"dyno-favorite active\"\n            />\n          ) : (\n            <UnFavoriteIcon onClick={handleClick} className=\"dyno-favorite\" />\n          )}\n        </>\n      ) : (\n        <UnFavoriteIcon\n          onClick={() => history.push(ROUTES.LOGIN)}\n          className=\"dyno-favorite\"\n        />\n      )}\n    </>\n  );\n}\n\nWordFavorite.propTypes = {\n  word: PropTypes.string,\n};\n\nWordFavorite.defaultProps = {\n  word: '',\n};\n\nexport default WordFavorite;\n"],"mappings":";;AAAA,OAAOA,YAAY,MAAM,6BAA6B;AACtD,OAAOC,cAAc,MAAM,mCAAmC;AAC9D,OAAOC,UAAU,MAAM,iBAAiB;AACxC,SAASC,MAAM,QAAQ,UAAU;AACjC,OAAOC,SAAS,MAAM,YAAY;AAClC,OAAOC,KAAK,MAAM,OAAO;AACzB,SAASC,WAAW,EAAEC,WAAW,QAAQ,aAAa;AACtD,SAASC,UAAU,QAAQ,kBAAkB;AAC7C,SAASC,UAAU,QAAQ,4BAA4B;AACvD,SAASC,eAAe,QAAQ,6BAA6B;AAAC;AAAA;AAE9D,SAASC,YAAY,OAAW;EAAA;EAAA,IAAV;IAAEC;EAAK,CAAC;EAC5B,MAAM;IAAEC,MAAM;IAAEC,QAAQ;IAAEC;EAAa,CAAC,GAAGR,WAAW,CACnDS,KAAK,IAAKA,KAAK,CAACC,QAAQ,CAC1B;EACD,MAAMC,OAAO,GAAGV,UAAU,EAAE;EAC5B,MAAMW,QAAQ,GAAGb,WAAW,EAAE;EAE9B,MAAMc,UAAU,GACdL,YAAY,CAACM,SAAS,CAAEC,CAAC,IAAKA,CAAC,CAACC,WAAW,EAAE,KAAKX,IAAI,CAACW,WAAW,EAAE,CAAC,KACrE,CAAC,CAAC;EAEJ,MAAMC,WAAW,GAAG,YAAY;IAC9B,IAAI;MACF,MAAMC,MAAM,GAAG,MAAMvB,UAAU,CAACwB,qBAAqB,CACnDZ,QAAQ,EACRF,IAAI,EACJ,CAACQ,UAAU,CACZ;MACD,IAAIK,MAAM,CAACE,MAAM,KAAK,GAAG,EAAE;QACzBR,QAAQ,CAACT,eAAe,CAAC;UAAEE,IAAI;UAAEgB,KAAK,EAAE,CAACR;QAAW,CAAC,CAAC,CAAC;MACzD;IACF,CAAC,CAAC,OAAOS,KAAK,EAAE;MAAA;MACd,MAAMC,OAAO,GAAG,oBAAAD,KAAK,CAACE,QAAQ,4EAAd,gBAAgBC,IAAI,yDAApB,qBAAsBF,OAAO,KAAI,qBAAqB;MACtEX,QAAQ,CAACV,UAAU,CAAC;QAAEwB,IAAI,EAAE,OAAO;QAAEH;MAAQ,CAAC,CAAC,CAAC;IAClD;EACF,CAAC;EAED,oBACE;IAAA,UACGjB,MAAM,gBACL;MAAA,UACGO,UAAU,gBACT,QAAC,YAAY;QACX,OAAO,EAAEI,WAAY;QACrB,SAAS,EAAC;MAAsB;QAAA;QAAA;QAAA;MAAA,QAChC,gBAEF,QAAC,cAAc;QAAC,OAAO,EAAEA,WAAY;QAAC,SAAS,EAAC;MAAe;QAAA;QAAA;QAAA;MAAA;IAChE,iBACA,gBAEH,QAAC,cAAc;MACb,OAAO,EAAE,MAAMN,OAAO,CAACgB,IAAI,CAAC/B,MAAM,CAACgC,KAAK,CAAE;MAC1C,SAAS,EAAC;IAAe;MAAA;MAAA;MAAA;IAAA;EAE5B,iBACA;AAEP;AAAC,GAhDQxB,YAAY;EAAA,QACwBJ,WAAW,EAGtCC,UAAU,EACTF,WAAW;AAAA;AAAA,KALrBK,YAAY;AAkDrBA,YAAY,CAACyB,SAAS,GAAG;EACvBxB,IAAI,EAAER,SAAS,CAACiC;AAClB,CAAC;AAED1B,YAAY,CAAC2B,YAAY,GAAG;EAC1B1B,IAAI,EAAE;AACR,CAAC;AAED,eAAeD,YAAY;AAAC;AAAA"},"metadata":{},"sourceType":"module"}