{"ast":null,"code":"var _jsxFileName = \"/Users/mac/Documents/Doantotnghiep/Doantotnghiep/dynonary-english/frontend/src/components/ForgotPassword/data.js\",\n  _s = $RefreshSig$();\nimport accountApi from 'apis/accountApi';\nimport { ROUTES, UX } from 'constant';\nimport React, { useState } from 'react';\nimport { useDispatch } from 'react-redux';\nimport { useHistory } from 'react-router-dom';\nimport { setMessage } from 'redux/slices/message.slice';\nimport ForgotPassword from '.';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction ForgotPasswordData() {\n  _s();\n  const [loading, setLoading] = useState(false);\n  const [mailSending, setMailSending] = useState(false);\n  const dispatch = useDispatch();\n  const history = useHistory();\n  const handleSendMail = async email => {\n    setMailSending(true);\n    try {\n      const apiRes = await accountApi.getSendVerifyCode(email);\n      if (apiRes.status === 200) {\n        dispatch(setMessage({\n          type: 'success',\n          message: 'Gửi mã thành công. Hãy kiểm tra email của bạn'\n        }));\n      }\n    } catch (error) {} finally {\n      setMailSending(false);\n    }\n  };\n  const handleResetPassword = async _ref => {\n    let {\n      email,\n      verifyCode,\n      password\n    } = _ref;\n    setLoading(true);\n    setMailSending(true);\n    try {\n      const apiRes = await accountApi.postResetPassword(email, password, verifyCode);\n      if (apiRes.status === 200) {\n        dispatch(setMessage({\n          type: 'success',\n          message: 'Đổi mật khẩu thành công',\n          duration: UX.DELAY_TIME\n        }));\n        setTimeout(() => {\n          history.push(ROUTES.LOGIN);\n        }, UX.DELAY_TIME);\n      }\n    } catch (error) {\n      var _error$response, _error$response$data;\n      const message = ((_error$response = error.response) === null || _error$response === void 0 ? void 0 : (_error$response$data = _error$response.data) === null || _error$response$data === void 0 ? void 0 : _error$response$data.message) || 'Đổi mật khẩu thất bại, thử lại !';\n      dispatch(setMessage({\n        type: 'error',\n        message\n      }));\n    } finally {\n      setLoading(false);\n      setMailSending(false);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(ForgotPassword, {\n    loading: loading,\n    mailSending: mailSending,\n    onSendVerifyCode: handleSendMail,\n    onSubmit: handleResetPassword\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 71,\n    columnNumber: 5\n  }, this);\n}\n_s(ForgotPasswordData, \"hY3t4Yh8p2CpZAAHMRAq/BxBJ98=\", false, function () {\n  return [useDispatch, useHistory];\n});\n_c = ForgotPasswordData;\nexport default ForgotPasswordData;\nvar _c;\n$RefreshReg$(_c, \"ForgotPasswordData\");","map":{"version":3,"names":["accountApi","ROUTES","UX","React","useState","useDispatch","useHistory","setMessage","ForgotPassword","ForgotPasswordData","loading","setLoading","mailSending","setMailSending","dispatch","history","handleSendMail","email","apiRes","getSendVerifyCode","status","type","message","error","handleResetPassword","verifyCode","password","postResetPassword","duration","DELAY_TIME","setTimeout","push","LOGIN","response","data"],"sources":["/Users/mac/Documents/Doantotnghiep/Doantotnghiep/dynonary-english/frontend/src/components/ForgotPassword/data.js"],"sourcesContent":["import accountApi from 'apis/accountApi';\nimport { ROUTES, UX } from 'constant';\nimport React, { useState } from 'react';\nimport { useDispatch } from 'react-redux';\nimport { useHistory } from 'react-router-dom';\nimport { setMessage } from 'redux/slices/message.slice';\nimport ForgotPassword from '.';\n\nfunction ForgotPasswordData() {\n  const [loading, setLoading] = useState(false);\n  const [mailSending, setMailSending] = useState(false);\n  const dispatch = useDispatch();\n  const history = useHistory();\n\n  const handleSendMail = async (email) => {\n    setMailSending(true);\n    try {\n      const apiRes = await accountApi.getSendVerifyCode(email);\n      if (apiRes.status === 200) {\n        dispatch(\n          setMessage({\n            type: 'success',\n            message: 'Gửi mã thành công. Hãy kiểm tra email của bạn',\n          }),\n        );\n      }\n    } catch (error) {\n    } finally {\n      setMailSending(false);\n    }\n  };\n\n  const handleResetPassword = async ({ email, verifyCode, password }) => {\n    setLoading(true);\n    setMailSending(true);\n    try {\n      const apiRes = await accountApi.postResetPassword(\n        email,\n        password,\n        verifyCode,\n      );\n\n      if (apiRes.status === 200) {\n        dispatch(\n          setMessage({\n            type: 'success',\n            message: 'Đổi mật khẩu thành công',\n            duration: UX.DELAY_TIME,\n          }),\n        );\n        setTimeout(() => {\n          history.push(ROUTES.LOGIN);\n        }, UX.DELAY_TIME);\n      }\n    } catch (error) {\n      const message =\n        error.response?.data?.message || 'Đổi mật khẩu thất bại, thử lại !';\n      dispatch(\n        setMessage({\n          type: 'error',\n          message,\n        }),\n      );\n    } finally {\n      setLoading(false);\n      setMailSending(false);\n    }\n  };\n\n  return (\n    <ForgotPassword\n      loading={loading}\n      mailSending={mailSending}\n      onSendVerifyCode={handleSendMail}\n      onSubmit={handleResetPassword}\n    />\n  );\n}\n\nexport default ForgotPasswordData;\n"],"mappings":";;AAAA,OAAOA,UAAU,MAAM,iBAAiB;AACxC,SAASC,MAAM,EAAEC,EAAE,QAAQ,UAAU;AACrC,OAAOC,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC,SAASC,WAAW,QAAQ,aAAa;AACzC,SAASC,UAAU,QAAQ,kBAAkB;AAC7C,SAASC,UAAU,QAAQ,4BAA4B;AACvD,OAAOC,cAAc,MAAM,GAAG;AAAC;AAE/B,SAASC,kBAAkB,GAAG;EAAA;EAC5B,MAAM,CAACC,OAAO,EAAEC,UAAU,CAAC,GAAGP,QAAQ,CAAC,KAAK,CAAC;EAC7C,MAAM,CAACQ,WAAW,EAAEC,cAAc,CAAC,GAAGT,QAAQ,CAAC,KAAK,CAAC;EACrD,MAAMU,QAAQ,GAAGT,WAAW,EAAE;EAC9B,MAAMU,OAAO,GAAGT,UAAU,EAAE;EAE5B,MAAMU,cAAc,GAAG,MAAOC,KAAK,IAAK;IACtCJ,cAAc,CAAC,IAAI,CAAC;IACpB,IAAI;MACF,MAAMK,MAAM,GAAG,MAAMlB,UAAU,CAACmB,iBAAiB,CAACF,KAAK,CAAC;MACxD,IAAIC,MAAM,CAACE,MAAM,KAAK,GAAG,EAAE;QACzBN,QAAQ,CACNP,UAAU,CAAC;UACTc,IAAI,EAAE,SAAS;UACfC,OAAO,EAAE;QACX,CAAC,CAAC,CACH;MACH;IACF,CAAC,CAAC,OAAOC,KAAK,EAAE,CAChB,CAAC,SAAS;MACRV,cAAc,CAAC,KAAK,CAAC;IACvB;EACF,CAAC;EAED,MAAMW,mBAAmB,GAAG,cAA2C;IAAA,IAApC;MAAEP,KAAK;MAAEQ,UAAU;MAAEC;IAAS,CAAC;IAChEf,UAAU,CAAC,IAAI,CAAC;IAChBE,cAAc,CAAC,IAAI,CAAC;IACpB,IAAI;MACF,MAAMK,MAAM,GAAG,MAAMlB,UAAU,CAAC2B,iBAAiB,CAC/CV,KAAK,EACLS,QAAQ,EACRD,UAAU,CACX;MAED,IAAIP,MAAM,CAACE,MAAM,KAAK,GAAG,EAAE;QACzBN,QAAQ,CACNP,UAAU,CAAC;UACTc,IAAI,EAAE,SAAS;UACfC,OAAO,EAAE,yBAAyB;UAClCM,QAAQ,EAAE1B,EAAE,CAAC2B;QACf,CAAC,CAAC,CACH;QACDC,UAAU,CAAC,MAAM;UACff,OAAO,CAACgB,IAAI,CAAC9B,MAAM,CAAC+B,KAAK,CAAC;QAC5B,CAAC,EAAE9B,EAAE,CAAC2B,UAAU,CAAC;MACnB;IACF,CAAC,CAAC,OAAON,KAAK,EAAE;MAAA;MACd,MAAMD,OAAO,GACX,oBAAAC,KAAK,CAACU,QAAQ,4EAAd,gBAAgBC,IAAI,yDAApB,qBAAsBZ,OAAO,KAAI,kCAAkC;MACrER,QAAQ,CACNP,UAAU,CAAC;QACTc,IAAI,EAAE,OAAO;QACbC;MACF,CAAC,CAAC,CACH;IACH,CAAC,SAAS;MACRX,UAAU,CAAC,KAAK,CAAC;MACjBE,cAAc,CAAC,KAAK,CAAC;IACvB;EACF,CAAC;EAED,oBACE,QAAC,cAAc;IACb,OAAO,EAAEH,OAAQ;IACjB,WAAW,EAAEE,WAAY;IACzB,gBAAgB,EAAEI,cAAe;IACjC,QAAQ,EAAEQ;EAAoB;IAAA;IAAA;IAAA;EAAA,QAC9B;AAEN;AAAC,GArEQf,kBAAkB;EAAA,QAGRJ,WAAW,EACZC,UAAU;AAAA;AAAA,KAJnBG,kBAAkB;AAuE3B,eAAeA,kBAAkB;AAAC;AAAA"},"metadata":{},"sourceType":"module"}