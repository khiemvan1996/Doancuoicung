{"ast":null,"code":"var _s = $RefreshSig$();\nimport { VOICE_KEYS } from 'constant';\nimport { useEffect } from 'react';\nimport { useDispatch } from 'react-redux';\nimport { setVoice } from 'redux/slices/voice.slice';\n\n// get custom voice to store into redux\nfunction useVoice() {\n  _s();\n  const dispatch = useDispatch();\n  useEffect(() => {\n    const customVoice = localStorage.getItem(VOICE_KEYS.LS_KEY);\n    if (customVoice) {\n      dispatch(setVoice(JSON.parse(customVoice)));\n    }\n  }, []);\n  return null;\n}\n_s(useVoice, \"rAh3tY+Iv6hWC9AI4Dm+rCbkwNE=\", false, function () {\n  return [useDispatch];\n});\nexport default useVoice;","map":{"version":3,"names":["VOICE_KEYS","useEffect","useDispatch","setVoice","useVoice","dispatch","customVoice","localStorage","getItem","LS_KEY","JSON","parse"],"sources":["/Users/mac/Documents/Doantotnghiep/Doantotnghiep/EKwebsite/frontend/src/hooks/useVoice.js"],"sourcesContent":["import { VOICE_KEYS } from 'constant';\nimport { useEffect } from 'react';\nimport { useDispatch } from 'react-redux';\nimport { setVoice } from 'redux/slices/voice.slice';\n\n// get custom voice to store into redux\nfunction useVoice() {\n  const dispatch = useDispatch();\n\n  useEffect(() => {\n    const customVoice = localStorage.getItem(VOICE_KEYS.LS_KEY);\n    if (customVoice) {\n      dispatch(setVoice(JSON.parse(customVoice)));\n    }\n  }, []);\n\n  return null;\n}\n\nexport default useVoice;\n"],"mappings":";AAAA,SAASA,UAAU,QAAQ,UAAU;AACrC,SAASC,SAAS,QAAQ,OAAO;AACjC,SAASC,WAAW,QAAQ,aAAa;AACzC,SAASC,QAAQ,QAAQ,0BAA0B;;AAEnD;AACA,SAASC,QAAQ,GAAG;EAAA;EAClB,MAAMC,QAAQ,GAAGH,WAAW,EAAE;EAE9BD,SAAS,CAAC,MAAM;IACd,MAAMK,WAAW,GAAGC,YAAY,CAACC,OAAO,CAACR,UAAU,CAACS,MAAM,CAAC;IAC3D,IAAIH,WAAW,EAAE;MACfD,QAAQ,CAACF,QAAQ,CAACO,IAAI,CAACC,KAAK,CAACL,WAAW,CAAC,CAAC,CAAC;IAC7C;EACF,CAAC,EAAE,EAAE,CAAC;EAEN,OAAO,IAAI;AACb;AAAC,GAXQF,QAAQ;EAAA,QACEF,WAAW;AAAA;AAY9B,eAAeE,QAAQ"},"metadata":{},"sourceType":"module"}