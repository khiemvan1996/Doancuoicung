{"ast":null,"code":"var _s = $RefreshSig$();\nimport { useEffect, useState } from 'react';\nimport { useSelector } from 'react-redux';\nlet globalVoices = [];\n\n// get voice in redux\nfunction useSpeaker() {\n  _s();\n  const [voices, setVoices] = useState(globalVoices);\n  const {\n    speed,\n    voiceURI,\n    volume\n  } = useSelector(state => state.voice);\n  const voice = voices.find(i => i.voiceURI === voiceURI);\n  useEffect(() => {\n    if (globalVoices.length > 0) return;\n    const intervalId = setInterval(() => {\n      const voiceList = window.speechSynthesis.getVoices();\n      if (voiceList.length > 0) {\n        globalVoices = voiceList.filter(i => i.lang.indexOf('en') !== -1);\n        setVoices(voiceList.filter(i => i.lang.indexOf('en') !== -1));\n        clearInterval(intervalId);\n      }\n    }, 50);\n    return () => {\n      intervalId && clearInterval(intervalId);\n    };\n  }, []);\n  return {\n    speed,\n    volume,\n    voice\n  };\n}\n_s(useSpeaker, \"c9TVPCk5d1LIdztO0V4SupTQX1A=\", false, function () {\n  return [useSelector];\n});\nexport default useSpeaker;","map":{"version":3,"names":["useEffect","useState","useSelector","globalVoices","useSpeaker","voices","setVoices","speed","voiceURI","volume","state","voice","find","i","length","intervalId","setInterval","voiceList","window","speechSynthesis","getVoices","filter","lang","indexOf","clearInterval"],"sources":["/Users/mac/Documents/Doantotnghiep/Doantotnghiep/EKwebsite/frontend/src/hooks/useSpeaker.js"],"sourcesContent":["import { useEffect, useState } from 'react';\nimport { useSelector } from 'react-redux';\n\nlet globalVoices = [];\n\n// get voice in redux\nfunction useSpeaker() {\n  const [voices, setVoices] = useState(globalVoices);\n  const { speed, voiceURI, volume } = useSelector((state) => state.voice);\n  const voice = voices.find((i) => i.voiceURI === voiceURI);\n\n  useEffect(() => {\n    if (globalVoices.length > 0) return;\n\n    const intervalId = setInterval(() => {\n      const voiceList = window.speechSynthesis.getVoices();\n      if (voiceList.length > 0) {\n        globalVoices = voiceList.filter((i) => i.lang.indexOf('en') !== -1);\n        setVoices(voiceList.filter((i) => i.lang.indexOf('en') !== -1));\n        clearInterval(intervalId);\n      }\n    }, 50);\n\n    return () => {\n      intervalId && clearInterval(intervalId);\n    };\n  }, []);\n\n  return { speed, volume, voice };\n}\n\nexport default useSpeaker;\n"],"mappings":";AAAA,SAASA,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAC3C,SAASC,WAAW,QAAQ,aAAa;AAEzC,IAAIC,YAAY,GAAG,EAAE;;AAErB;AACA,SAASC,UAAU,GAAG;EAAA;EACpB,MAAM,CAACC,MAAM,EAAEC,SAAS,CAAC,GAAGL,QAAQ,CAACE,YAAY,CAAC;EAClD,MAAM;IAAEI,KAAK;IAAEC,QAAQ;IAAEC;EAAO,CAAC,GAAGP,WAAW,CAAEQ,KAAK,IAAKA,KAAK,CAACC,KAAK,CAAC;EACvE,MAAMA,KAAK,GAAGN,MAAM,CAACO,IAAI,CAAEC,CAAC,IAAKA,CAAC,CAACL,QAAQ,KAAKA,QAAQ,CAAC;EAEzDR,SAAS,CAAC,MAAM;IACd,IAAIG,YAAY,CAACW,MAAM,GAAG,CAAC,EAAE;IAE7B,MAAMC,UAAU,GAAGC,WAAW,CAAC,MAAM;MACnC,MAAMC,SAAS,GAAGC,MAAM,CAACC,eAAe,CAACC,SAAS,EAAE;MACpD,IAAIH,SAAS,CAACH,MAAM,GAAG,CAAC,EAAE;QACxBX,YAAY,GAAGc,SAAS,CAACI,MAAM,CAAER,CAAC,IAAKA,CAAC,CAACS,IAAI,CAACC,OAAO,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC,CAAC;QACnEjB,SAAS,CAACW,SAAS,CAACI,MAAM,CAAER,CAAC,IAAKA,CAAC,CAACS,IAAI,CAACC,OAAO,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC;QAC/DC,aAAa,CAACT,UAAU,CAAC;MAC3B;IACF,CAAC,EAAE,EAAE,CAAC;IAEN,OAAO,MAAM;MACXA,UAAU,IAAIS,aAAa,CAACT,UAAU,CAAC;IACzC,CAAC;EACH,CAAC,EAAE,EAAE,CAAC;EAEN,OAAO;IAAER,KAAK;IAAEE,MAAM;IAAEE;EAAM,CAAC;AACjC;AAAC,GAvBQP,UAAU;EAAA,QAEmBF,WAAW;AAAA;AAuBjD,eAAeE,UAAU"},"metadata":{},"sourceType":"module"}