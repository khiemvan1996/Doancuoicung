{"ast":null,"code":"var _jsxFileName = \"/Users/mac/Documents/Doantotnghiep/Doantotnghiep/EKwebsite/frontend/src/components/DynoDictionary/SettingWordPack.js\",\n  _s = $RefreshSig$();\nimport SettingsIcon from '@material-ui/icons/Settings';\nimport WordPack from 'components/UI/WordPack';\nimport PropTypes from 'prop-types';\nimport React, { useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nfunction DDSettingWordPack(_ref) {\n  _s();\n  let {\n    classNameIcon,\n    onChoose\n  } = _ref;\n  const [openWordPack, setOpenWordPack] = useState(false);\n  const onSelect = v => {\n    onChoose(v);\n    setOpenWordPack(false);\n  };\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(SettingsIcon, {\n      className: classNameIcon,\n      onClick: () => setOpenWordPack(true)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 16,\n      columnNumber: 7\n    }, this), openWordPack && /*#__PURE__*/_jsxDEV(WordPack, {\n      open: openWordPack,\n      onCancel: () => setOpenWordPack(false),\n      onChoose: onSelect\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true);\n}\n_s(DDSettingWordPack, \"sBTwtl+iF/HT2j4O+B8v7xAtaiw=\");\n_c = DDSettingWordPack;\nDDSettingWordPack.propTypes = {\n  classNameIcon: PropTypes.string,\n  onChoose: PropTypes.func\n};\nDDSettingWordPack.defaultProps = {\n  onChoose: () => {}\n};\nexport default DDSettingWordPack;\nvar _c;\n$RefreshReg$(_c, \"DDSettingWordPack\");","map":{"version":3,"names":["SettingsIcon","WordPack","PropTypes","React","useState","DDSettingWordPack","classNameIcon","onChoose","openWordPack","setOpenWordPack","onSelect","v","propTypes","string","func","defaultProps"],"sources":["/Users/mac/Documents/Doantotnghiep/Doantotnghiep/EKwebsite/frontend/src/components/DynoDictionary/SettingWordPack.js"],"sourcesContent":["import SettingsIcon from '@material-ui/icons/Settings';\nimport WordPack from 'components/UI/WordPack';\nimport PropTypes from 'prop-types';\nimport React, { useState } from 'react';\n\nfunction DDSettingWordPack({ classNameIcon, onChoose }) {\n  const [openWordPack, setOpenWordPack] = useState(false);\n\n  const onSelect = (v) => {\n    onChoose(v);\n    setOpenWordPack(false);\n  };\n\n  return (\n    <>\n      <SettingsIcon\n        className={classNameIcon}\n        onClick={() => setOpenWordPack(true)}\n      />\n\n      {/* setting modal */}\n      {openWordPack && (\n        <WordPack\n          open={openWordPack}\n          onCancel={() => setOpenWordPack(false)}\n          onChoose={onSelect}\n        />\n      )}\n    </>\n  );\n}\n\nDDSettingWordPack.propTypes = {\n  classNameIcon: PropTypes.string,\n  onChoose: PropTypes.func,\n};\n\nDDSettingWordPack.defaultProps = {\n  onChoose: () => {},\n};\n\nexport default DDSettingWordPack;\n"],"mappings":";;AAAA,OAAOA,YAAY,MAAM,6BAA6B;AACtD,OAAOC,QAAQ,MAAM,wBAAwB;AAC7C,OAAOC,SAAS,MAAM,YAAY;AAClC,OAAOC,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AAAC;AAAA;AAExC,SAASC,iBAAiB,OAA8B;EAAA;EAAA,IAA7B;IAAEC,aAAa;IAAEC;EAAS,CAAC;EACpD,MAAM,CAACC,YAAY,EAAEC,eAAe,CAAC,GAAGL,QAAQ,CAAC,KAAK,CAAC;EAEvD,MAAMM,QAAQ,GAAIC,CAAC,IAAK;IACtBJ,QAAQ,CAACI,CAAC,CAAC;IACXF,eAAe,CAAC,KAAK,CAAC;EACxB,CAAC;EAED,oBACE;IAAA,wBACE,QAAC,YAAY;MACX,SAAS,EAAEH,aAAc;MACzB,OAAO,EAAE,MAAMG,eAAe,CAAC,IAAI;IAAE;MAAA;MAAA;MAAA;IAAA,QACrC,EAGDD,YAAY,iBACX,QAAC,QAAQ;MACP,IAAI,EAAEA,YAAa;MACnB,QAAQ,EAAE,MAAMC,eAAe,CAAC,KAAK,CAAE;MACvC,QAAQ,EAAEC;IAAS;MAAA;MAAA;MAAA;IAAA,QAEtB;EAAA,gBACA;AAEP;AAAC,GAzBQL,iBAAiB;AAAA,KAAjBA,iBAAiB;AA2B1BA,iBAAiB,CAACO,SAAS,GAAG;EAC5BN,aAAa,EAAEJ,SAAS,CAACW,MAAM;EAC/BN,QAAQ,EAAEL,SAAS,CAACY;AACtB,CAAC;AAEDT,iBAAiB,CAACU,YAAY,GAAG;EAC/BR,QAAQ,EAAE,MAAM,CAAC;AACnB,CAAC;AAED,eAAeF,iBAAiB;AAAC;AAAA"},"metadata":{},"sourceType":"module"}