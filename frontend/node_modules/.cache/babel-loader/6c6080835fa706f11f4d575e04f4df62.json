{"ast":null,"code":"var _jsxFileName = \"/Users/mac/Documents/Doantotnghiep/Doantotnghiep/dynonary-english/frontend/src/components/Contribution/Sentence/data.js\",\n  _s = $RefreshSig$();\nimport sentenceApi from 'apis/sentenceApi';\nimport React, { useState } from 'react';\nimport { useDispatch } from 'react-redux';\nimport { setMessage } from 'redux/slices/message.slice';\nimport SentenceContribution from './index';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction SentenceContributionData() {\n  _s();\n  const [submitting, setSubmitting] = useState(false);\n  const dispatch = useDispatch();\n  const handleSubmit = async formData => {\n    const {\n      sentence,\n      mean,\n      note,\n      topics\n    } = formData;\n    try {\n      setSubmitting(true);\n      const apiRes = await sentenceApi.postContributeSentence(sentence, mean, note, topics);\n      if (apiRes.status === 200) {\n        dispatch(setMessage({\n          type: 'success',\n          message: 'Thêm thành công, đang chờ xét duyệt. Cảm ơn sự đóng góp của bạn ❤',\n          duration: 5000\n        }));\n      }\n    } catch (error) {\n      var _error$response, _error$response$data;\n      const message = ((_error$response = error.response) === null || _error$response === void 0 ? void 0 : (_error$response$data = _error$response.data) === null || _error$response$data === void 0 ? void 0 : _error$response$data.message) || 'Thêm câu mới không thành công, thử lại';\n      dispatch(setMessage({\n        type: 'error',\n        message\n      }));\n    } finally {\n      setSubmitting(false);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(SentenceContribution, {\n    submitting: submitting,\n    onSubmitForm: handleSubmit\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 48,\n    columnNumber: 5\n  }, this);\n}\n_s(SentenceContributionData, \"5iB+qujXnQj6jBoSGKljUlKKZP8=\", false, function () {\n  return [useDispatch];\n});\n_c = SentenceContributionData;\nexport default SentenceContributionData;\nvar _c;\n$RefreshReg$(_c, \"SentenceContributionData\");","map":{"version":3,"names":["sentenceApi","React","useState","useDispatch","setMessage","SentenceContribution","SentenceContributionData","submitting","setSubmitting","dispatch","handleSubmit","formData","sentence","mean","note","topics","apiRes","postContributeSentence","status","type","message","duration","error","response","data"],"sources":["/Users/mac/Documents/Doantotnghiep/Doantotnghiep/dynonary-english/frontend/src/components/Contribution/Sentence/data.js"],"sourcesContent":["import sentenceApi from 'apis/sentenceApi';\nimport React, { useState } from 'react';\nimport { useDispatch } from 'react-redux';\nimport { setMessage } from 'redux/slices/message.slice';\nimport SentenceContribution from './index';\n\nfunction SentenceContributionData() {\n  const [submitting, setSubmitting] = useState(false);\n  const dispatch = useDispatch();\n\n  const handleSubmit = async (formData) => {\n    const { sentence, mean, note, topics } = formData;\n    try {\n      setSubmitting(true);\n\n      const apiRes = await sentenceApi.postContributeSentence(\n        sentence,\n        mean,\n        note,\n        topics,\n      );\n      if (apiRes.status === 200) {\n        dispatch(\n          setMessage({\n            type: 'success',\n            message:\n              'Thêm thành công, đang chờ xét duyệt. Cảm ơn sự đóng góp của bạn ❤',\n            duration: 5000,\n          }),\n        );\n      }\n    } catch (error) {\n      const message =\n        error.response?.data?.message ||\n        'Thêm câu mới không thành công, thử lại';\n      dispatch(\n        setMessage({\n          type: 'error',\n          message,\n        }),\n      );\n    } finally {\n      setSubmitting(false);\n    }\n  };\n\n  return (\n    <SentenceContribution submitting={submitting} onSubmitForm={handleSubmit} />\n  );\n}\n\nexport default SentenceContributionData;\n"],"mappings":";;AAAA,OAAOA,WAAW,MAAM,kBAAkB;AAC1C,OAAOC,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC,SAASC,WAAW,QAAQ,aAAa;AACzC,SAASC,UAAU,QAAQ,4BAA4B;AACvD,OAAOC,oBAAoB,MAAM,SAAS;AAAC;AAE3C,SAASC,wBAAwB,GAAG;EAAA;EAClC,MAAM,CAACC,UAAU,EAAEC,aAAa,CAAC,GAAGN,QAAQ,CAAC,KAAK,CAAC;EACnD,MAAMO,QAAQ,GAAGN,WAAW,EAAE;EAE9B,MAAMO,YAAY,GAAG,MAAOC,QAAQ,IAAK;IACvC,MAAM;MAAEC,QAAQ;MAAEC,IAAI;MAAEC,IAAI;MAAEC;IAAO,CAAC,GAAGJ,QAAQ;IACjD,IAAI;MACFH,aAAa,CAAC,IAAI,CAAC;MAEnB,MAAMQ,MAAM,GAAG,MAAMhB,WAAW,CAACiB,sBAAsB,CACrDL,QAAQ,EACRC,IAAI,EACJC,IAAI,EACJC,MAAM,CACP;MACD,IAAIC,MAAM,CAACE,MAAM,KAAK,GAAG,EAAE;QACzBT,QAAQ,CACNL,UAAU,CAAC;UACTe,IAAI,EAAE,SAAS;UACfC,OAAO,EACL,mEAAmE;UACrEC,QAAQ,EAAE;QACZ,CAAC,CAAC,CACH;MACH;IACF,CAAC,CAAC,OAAOC,KAAK,EAAE;MAAA;MACd,MAAMF,OAAO,GACX,oBAAAE,KAAK,CAACC,QAAQ,4EAAd,gBAAgBC,IAAI,yDAApB,qBAAsBJ,OAAO,KAC7B,wCAAwC;MAC1CX,QAAQ,CACNL,UAAU,CAAC;QACTe,IAAI,EAAE,OAAO;QACbC;MACF,CAAC,CAAC,CACH;IACH,CAAC,SAAS;MACRZ,aAAa,CAAC,KAAK,CAAC;IACtB;EACF,CAAC;EAED,oBACE,QAAC,oBAAoB;IAAC,UAAU,EAAED,UAAW;IAAC,YAAY,EAAEG;EAAa;IAAA;IAAA;IAAA;EAAA,QAAG;AAEhF;AAAC,GA3CQJ,wBAAwB;EAAA,QAEdH,WAAW;AAAA;AAAA,KAFrBG,wBAAwB;AA6CjC,eAAeA,wBAAwB;AAAC;AAAA"},"metadata":{},"sourceType":"module"}